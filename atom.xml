<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Gerard Condon's Blog]]></title>
  <link href="http://www.gerardcondon.com/atom.xml" rel="self"/>
  <link href="http://www.gerardcondon.com/"/>
  <updated>2013-04-17T23:46:23+01:00</updated>
  <id>http://www.gerardcondon.com/</id>
  <author>
    <name><![CDATA[Gerard Condon]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Uncle Bob's "Architecture The Lost Years" Talk]]></title>
    <link href="http://www.gerardcondon.com/blog/2013/04/17/uncle-bobs-architecture-talk/"/>
    <updated>2013-04-17T22:46:00+01:00</updated>
    <id>http://www.gerardcondon.com/blog/2013/04/17/uncle-bobs-architecture-talk</id>
    <content type="html"><![CDATA[<p>I found this <a href="http://confreaks.com/videos/759-rubymidwest2011-keynote-architecture-the-lost-years">talk</a> by Uncle Bob Martin to be really enjoyable and thought provoking. In it he talks about decoupling your application from the database and the web. It&#8217;s ostensibly a Rails talk but I think it applies to every language.</p>

<p>It really crystalized the issues I&#8217;ve been having with developing Objective-C applications i.e. the intermixing of the database (specifically Core Data) and UI code. After viewing this, I was able to come to iOS development with a whole new perspective. It&#8217;s so much clearer to me now how to architect applications, where code belongs and what interfaces are needed. After completely separating Core Data and UI code, the whole application has gotten a lot simpler and is much easier to unit test.</p>

<p>It also introduced me to Alistair Cockburn&#8217;s <a href="http://alistair.cockburn.us/Hexagonal+architecture">Hexagonal Architecture</a>. This is a really nice architecture for isolating the application from external entities such as the GUI or database. I&#8217;ve seen this crop up more and more on various Rails blogs under the term &#8216;Hexagonal Rails&#8217;.</p>

<p>As a reference, <a href="http://blog.8thlight.com/uncle-bob/2011/11/22/Clean-Architecture.html">here</a> and <a href="http://blog.8thlight.com/uncle-bob/2012/08/13/the-clean-architecture.html">here</a> are a couple of other links from Bob Martin&#8217;s blog talking about &#8220;clean architecture&#8221;.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Side Project: Irish Rail Tracker]]></title>
    <link href="http://www.gerardcondon.com/blog/2013/03/18/side-project-irish-rail-tracker/"/>
    <updated>2013-03-18T10:56:00+00:00</updated>
    <id>http://www.gerardcondon.com/blog/2013/03/18/side-project-irish-rail-tracker</id>
    <content type="html"><![CDATA[<p>I&#8217;ve been working on a <a href="http://www.gerardcondon.com/projects/irishrail/index.html">side project</a> for the last month in order to learn about front-end web development. While not complete by any means, I think it&#8217;s good enough to release as a beta. I plan to add features, improve the UI and refactor the code in future.</p>

<p>The motivation behind it was that I wanted to do a project using one of the JavaScript <a href="http://addyosmani.github.com/todomvc/">MVC Frameworks</a> - for this one I chose <a href="http://backbonejs.org">Backbone</a>. Also I&#8217;ll be working more with HTML and CSS in work over the coming year and I need to ramp up on these.</p>

<p><a href="http://www.irishrail.ie">Iarnród Éireann</a> (the Irish Rail company) has a REST API which provides details of the stations in its network and the current status of its trains. My <a href="http://www.gerardcondon.com/projects/irishrail/index.html">webpage</a> plots these stations and trains on a Google Map and shows upcoming train information for each station.</p>

<p>I plan to write a series of posts on how I implemented this and the lessons I learned along the way.</p>

<p>The project is available <a href="http://www.gerardcondon.com/projects/irishrail/index.html">here</a> and the code is available on <a href="https://github.com/gerardcondon/Irish-Rail-Tracker">Github</a> under the MIT licence. The roadmap.md document is where I&#8217;m tracking future work that needs to be done on the project. Any feedback would be much appreciated.</p>

<p>As far as the code goes:</p>

<ul>
<li>I&#8217;m happy enough with the Backbone model and collection code. The Backbone view code still needs some refactoring to remove duplication and use proper Backbone idioms.</li>
<li>There are some JavaScript <a href="http://pivotal.github.com/jasmine/">Jasmine</a> tests - mostly for the model. I&#8217;m still figuring out the best way to test the UI - I have some Jasmine tests but also some Ruby <a href="https://github.com/jnicklas/capybara">Capybara</a> tests for the browser.</li>
<li>The HTML and CSS code are functional rather than elegant. I&#8217;m hoping to improve these as time goes by and as I get more experience with these languages.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Controllers in Objective C]]></title>
    <link href="http://www.gerardcondon.com/blog/2013/03/17/controllers-in-objective-c/"/>
    <updated>2013-03-17T13:52:00+00:00</updated>
    <id>http://www.gerardcondon.com/blog/2013/03/17/controllers-in-objective-c</id>
    <content type="html"><![CDATA[<p>One of the things to learn about iOS is the MVC model. The Cocoa implementation of MVC has some <a href="http://developer.apple.com/library/ios/documentation/general/conceptual/CocoaEncyclopedia/Model-View-Controller/Model-View-Controller.html#//apple_ref/doc/uid/TP40010810-CH14-SW9">differences</a> compared to the traditional approach. For example, in Cocoa, views are not aware of the models and don&#8217;t listen for model updates. Instead the all events pass through the controller, i.e. it listens for model changes and then tells the view to update itself.</p>

<p>In <a href="http://rubyonrails.org/">Rails</a>, the constant refrain is that controllers should be thin. However on iOS they seem to be absolutely huge. One joke that I saw on Twitter was that on iOS, MVC stood for Massive View Controller. For example, the Recipe sample application from Apple has controllers with hundreds of lines of code with one topping out at 600 LOC.</p>

<p>One of my issues with these view controllers is that they don&#8217;t follow the Single Responsibility Principle, but instead combine multiple functions. They act as delegates for multiple protocols e.g. table data source, fetched results controller delegate etc. I find it hard to distinguish the separate elements of MVC when one class is doing everything. Also in Objective C, once everything is in the same file, it&#8217;s not obvious to which protocol an item belongs. I think this risks breaking the MVC boundaries. For example, during a refactor, if you&#8217;re not careful, you can easily get model variables depending on controller variables and vice-versa.</p>

<p>I&#8217;d much prefer it if these controllers were split out into lots of different classes, each with a single job as per the SRP. This would lead to a more composition-based rather than inheritance-based codebase. I also think that this greatly helps with code navigation. Jumping to a small, focused file has the effect of filtering out irrelevant code. I&#8217;ve started using Sublime Text recently and it has great functionality for navigating between files, so I prefer having lots of smaller files rather than a few large monolithic classes.</p>

<p>(On a side note this is one thing that really annoys me about XCode. Given a properly nested folder structure with well named files, I think it becomes a lot easier to find your way around the app. For example even after only a few weeks learning Rails, I know exactly where to look to find the controllers, models, db code etc. But XCode is a disaster here. It doesn&#8217;t push the groupings made in the app on to the file system underneath. It requires duplicate effort of organising the code both inside and outside the application to keep the codebase properly organised.)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Destroy All Software Screencasts]]></title>
    <link href="http://www.gerardcondon.com/blog/2013/02/27/destroy-all-software-screencasts/"/>
    <updated>2013-02-27T23:14:00+00:00</updated>
    <id>http://www.gerardcondon.com/blog/2013/02/27/destroy-all-software-screencasts</id>
    <content type="html"><![CDATA[<p>I recently subscribed to Gary Bernhardt&#8217;s <a href="https://www.destroyallsoftware.com/screencasts">Destroy All Software</a> screencasts. I found these absolutely fantastic. There are only about ten to fifteen minutes each in length so it&#8217;s no hassle to find the time to watch them. However they cover a lot in the short time.</p>

<p>They are mostly Ruby and in particular Rails focused but the topics are applicable to any software programming. For example, I&#8217;ve really learned a great deal about TDD from watching this.</p>

<p>The Github <a href="https://github.com/garybernhardt/destroy-all-software-extras">archive</a> is useful, especially the <a href="https://github.com/garybernhardt/sucks-rocks">Suck/Rocks</a> Rails app. His <a href="https://github.com/garybernhardt/dotfiles">Git</a> config file is also really handy and I really like his log formatting. I would have liked to see him post a larger sample Rails app to Github (or for the ultimate in wishful thinking - the code for the Destroy All Software site). It would expand upon how his ideas work when confronted with the complexity and messiness of a real world system.</p>

<p>Overall I highly recommend the series for any programmer regardless of what language you are using. Unfortunately I believe he&#8217;s stopping soon but you get access to the entire back catalog with a subscription and they&#8217;re well worth it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Year Update and Reflections]]></title>
    <link href="http://www.gerardcondon.com/blog/2013/02/23/year-update-and-reflections/"/>
    <updated>2013-02-23T21:52:00+00:00</updated>
    <id>http://www.gerardcondon.com/blog/2013/02/23/year-update-and-reflections</id>
    <content type="html"><![CDATA[<p>It&#8217;s been a year, give or take, since I started looking into iOS development, and I wanted to write a post to reflect on where I am and what are the next steps.</p>

<h2>Progress on iOS to Date</h2>

<ul>
<li><p>I spent the first three months of the year learning Objective C and hacking on some small programs.</p></li>
<li><p>I spent some time experimenting with Core Data and MVC and trying to get an automated testing system up and running.</p></li>
<li><p>The summer months were quiet due to work commitments. The project I was working on switched to JavaScript which I hadn&#8217;t really used before. Due to this, I spent a lot of time learning JavaScript and web frontend and backend development.</p></li>
<li><p>After the summer I came back to the app with a better understanding of MVC as implemented in iOS and Core Data and I started working on it again. I read up on TDD and started implemented tests using Cucumber and Calabash. That took me up to about October.</p></li>
<li><p>Work has stalled on it since then due to a combination of real life commitments from both family life and work. And also Skyrim! Curse you Skyrim and the hours I sank into it :)</p></li>
</ul>


<h2>Current Status</h2>

<p>Here&#8217;s where I am currently</p>

<ul>
<li><p>App work: I didn&#8217;t get as much done as I had planned at the start of last year. I got diverted in other areas, namely:</p></li>
<li><p>Testing - TDD &amp; BDD: I hadn&#8217;t planned to look at any of this but ended up spending a lot of time here and learning a great deal. Familiarizing myself with this way of programming was probably the biggest benefit I gained from the last years experimentation. I probably could have completed the app if I didn&#8217;t spend so much time on TDD and tinkering with automated testing setups on Jenkins. However I wouldn&#8217;t have learned anywhere near as much about proper programming techniques if I did.</p></li>
<li><p>JavaScript: I spent a good deal of time learning proper JavaScript development. The basic syntax is very similar to Java which I already knew. However I wanted to learn how to program using JavaScript correctly i.e. modular code using RequireJS, TDD using Jasmine etc.</p></li>
<li><p>Ruby and Rails: again I had not planned on researching any of this but I got interested in it while looking at JavaScript. Have done a few tutorials and would like to write a Rails app at some stage.</p></li>
</ul>


<p>I spent a lot of time over the last year becoming proficient in web app and backend development in JavaScript for a work project. I&#8217;ve been really enjoying this. My only previous experience of JavaScript and web development was back in college around 2000 and I wasn&#8217;t too taken with it compared to Java and C development. But looking at it now and in combination with backends like Rails, I&#8217;ve been really impressed. I&#8217;m kind of kicking myself for tuning out on what was happening in web development over the past decade. I plan to branch out and do some posts on what I used to ramp up on this.</p>

<p>On the iOS front I feel that I have a good knowledge of Objective C. However the issue is finding time to finish the app. Any time I was able to set aside a sizable chunk of time I got a lot done but getting that time is the key.</p>

<h2>Reflections</h2>

<p>I think working on this side project has made me expand my horizons more as a developer. I couldn&#8217;t have predicted the areas that I would have become interested in at the start of last year. I don&#8217;t think it&#8217;s a coincidence that as I&#8217;ve started looking at more stuff outside of work, that my work projects have become more interesting. I feel like I&#8217;m able to bring so much more to a project now especially in the areas of TDD and design.</p>

<p>Admittedly I haven&#8217;t pursued the iOS work 100%, but I feel that the other languages I&#8217;ve been exposed to compensate for that. I think it was better to start out with iOS and then divert into other topics rather than not do any side work at all.</p>

<p>However at the end of the day the reality is that I haven&#8217;t shipped anything on iOS yet. I&#8217;ve been justifying this to myself by claiming all these other intangible benefits. Given what I&#8217;ve learned, I don&#8217;t think that I&#8217;ve wasted my time but still I&#8217;d like to get some iOS project finished. Unfortunately given my current life and work commitments I probably won&#8217;t have time to work on it over the next three months. In the meantime, I&#8217;ll post about my JavaScript and TDD experiences.</p>

<p>As regards the blog, looking back I am happy enough with what was posted in the past year. The main thing I&#8217;m not happy with is the regularity of the postings. The same things that have stopped me doing much software work, have also stopped me publishing much. In future I want to maintain a more regular posting rate. I aim to post at least once a fortnight and hopefully once a week.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Stanford iOS Course Companion Book]]></title>
    <link href="http://www.gerardcondon.com/blog/2013/01/28/stanford-ios-course-companion-book/"/>
    <updated>2013-01-28T23:27:00+00:00</updated>
    <id>http://www.gerardcondon.com/blog/2013/01/28/stanford-ios-course-companion-book</id>
    <content type="html"><![CDATA[<p>I previously <a href="http://www.gerardcondon.com/blog/2012/01/29/itunes-u-and-online-learning/">recommended</a> the Stanford iOS course and they now have a companion <a href="http://editorscut.com/Books/003ipadiphone/003ipadiphone-details.html">book</a> available for the iPad through iBooks.</p>

<p>The content of this book is excellent and it really complements the course videos. I really like the code samples and how they are displayed dynamically on the iPad. They have really used the iBooks format well for these. Additionally all the code is available on <a href="https://github.com/editorscut/ec003-ipad-and-iphone-app-development">Github</a>.</p>

<p>I highly recommend the book and I wish it was available when I originally watched the videos. Given the quality of the lectures and the book, Stanford could easily charge for this stuff - it was certainly equal to any introductory programming course I&#8217;ve attended at college. It seems inconceivable to me that this approach won&#8217;t form the basis of education in the years to come.</p>

<p>It&#8217;s maybe a bit churlish to criticise a free book but still I do have some issues. These concern the format the book was released in and not its content.</p>

<ul>
<li><p>Firstly it was only released for iPad and not for iPhone. I would have liked to have had a reference version for iPhone.</p></li>
<li><p>Also I don&#8217;t like the iBooks lock in. I really want to have this on my Macbook and/or Kindle to have open when programming. Here&#8217;s where an epub or pdf version would be a lot better. The <a href="http://pragprog.com">Pragmatic Programmers</a> company have shown the way forward with their ebook releases, giving multiple DRM free versions of their books.</p></li>
</ul>


<p>Apart from those minor nits though, this is an essential resource for learning iOS.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Managing Sub-Modules with Git Subtree]]></title>
    <link href="http://www.gerardcondon.com/blog/2012/11/05/managing-sub-modules-with-git-subtree/"/>
    <updated>2012-11-05T23:30:00+00:00</updated>
    <id>http://www.gerardcondon.com/blog/2012/11/05/managing-sub-modules-with-git-subtree</id>
    <content type="html"><![CDATA[<p>I&#8217;ve been using Git for a while now, both at work and also for my iOS projects. I&#8217;m really liking it and have nearly sorted out my workflow with it. One problem that remains for me though is how to manage external dependencies. If I need to include a library from Github for example, how do I integrate it with my source.</p>

<p>The main issues that I want to solve are</p>

<ul>
<li><p>What happens if the external library disappears? This is especially relevant for online sources like Github. Given the brittle nature of the web, I think we can take it as a given that a lot of these Github repositories will be deleted over the coming years. In this scenario I need to have a local copy of the code as a backup.</p></li>
<li><p>I should be able to update the local code with the latest or a specific tag from the external repository.</p></li>
<li><p>I want to be able to create common libraries for my own code which I can share between applications.</p></li>
<li><p>It may be that I will need to modify the code, so how do I maintain those changes. Perhaps I will need to push those changes to the external repository. This seems likely for my own common libraries.</p></li>
<li><p>I want to be able to check out all the code needed to build an application from the source control using a single checkout/clone command. This means that each application will have a full copy of all the code that is needed to build it.</p></li>
</ul>


<p>One solution that I&#8217;ve seen used in other projects is to use git submodule links. A git submodule points to a version of an external repository. The ones I&#8217;ve seen for iOS libraries will usually point to Github. When you run the <code>git submodule init</code> command, git will follow these links and download the source into your project.</p>

<p>However in researching this, other people have reported problems using git submodules. They don&#8217;t seem as simple and as usable as I would need. I&#8217;m seeing issues on <a href="http://codingkilledthecat.wordpress.com/2012/04/28/why-your-company-shouldnt-use-git-submodules/">sites</a> regarding detached heads, branching, different versions etc. I just know that I will hit all these issues and probably a few more besides!</p>

<p>In looking for an alternative I came across git subtrees on Wolf Rentzsch&#8217;s <a href="http://rentzsch.tumblr.com/post/22061209807/apps-i-love-git-subtree">site</a>. This seems to fit all my needs and appears less error prone than git submodules. The code can be downloaded <a href="https://github.com/rentzsch/git-subtree">here</a> and here&#8217;s a good <a href="http://psionides.eu/2010/02/04/sharing-code-between-projects-with-git-subtree/">tutorial</a> on using subtrees.</p>

<p>My basic usage of it, i.e. to integrate a library from Github would be something like
<code>git subtree add --prefix=GCUtils/External/CocoaLumberjack --squash https://github.com/robbiehanson/CocoaLumberjack.git master</code>
I use the squash option to compress all the commit history of the library to just one commit message in my repository.</p>

<p>One issue I ran into was adding a project which itself contained submodules. In this situation I search and find all the .gitmodules files and add those manually as subtrees in my repository.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting up Calabash on iOS]]></title>
    <link href="http://www.gerardcondon.com/blog/2012/10/22/setting-up-calabash-on-ios/"/>
    <updated>2012-10-22T23:38:00+01:00</updated>
    <id>http://www.gerardcondon.com/blog/2012/10/22/setting-up-calabash-on-ios</id>
    <content type="html"><![CDATA[<p>I&#8217;ve been implementing some new features in iOS and in the process refactoring some existing code. As I&#8217;ve been making these changes, I began to feel that the code was reaching a tipping point where I was as likely to break existing features as successfully add the new functionality.
In particular I was experimenting with table view controllers and there are a lot of functions to override depending on what behaviour you want. I was finding that changes for one type of behaviour were impacting functionality that I thought I had solved previously. I hadn&#8217;t been doing much automated testing up to now apart from some unit testing, so I was worried about adding regression bugs.</p>

<p>I decided to take a break from coding in order to implement some proper tests and specifically I wanted to do some UI testing. For this I chose the Calabash framework. This is developed by the people at <a href="http://lesspainful.com">Less Painful</a>. One of them, Karl Krukow, has a detailed <a href="http://blog.lesspainful.com/2012/03/07/Calabash-iOS/">post</a> comparing Calabash to the other automated frameworks out there.</p>

<h1>Cucumber</h1>

<p>Calabash is based on a Ruby test framework called <a href="http://cukes.info">Cucumber</a>. Cucumber allows for tests to be written in high level language called Gherkin. Gherkin is written in natural language and so can be understood by anyone - not just developers. It acts as documentation as well as a test framework. I could see this as being very useful when writing an application for a client. By giving them the Cucumber tests, they can see in plain English what is being implemented and should be able to give constructive feedback. Also the tests are automated and are run from the command line.</p>

<p>While learning Cucumber the two main resources I used were</p>

<ul>
<li>The <a href="http://cukes.info">Cucumber</a> website which has a number of tutorials and a great wiki.</li>
<li>The Pragmatic Programmers&#8217; Cucumber <a href="http://pragprog.com/book/hwcuc/the-cucumber-book">book</a>. This is an excellent book. I highly recommend reading this before implementing any tests.</li>
</ul>


<h1>Installation</h1>

<p>Cucumber requires Ruby to be installed on your system (I had previously installed it while setting up Octopress). The Calabash install process is documented on their Github <a href="https://github.com/calabash/calabash-ios">page</a>. I used the Fast Track installer using these steps.</p>

<ul>
<li><code>gem install calabash-cucumber</code></li>
<li><code>calabash-ios setup</code></li>
<li><code>calabash-ios sim acc</code></li>
<li><code>calabash-ios gen</code></li>
</ul>


<p>This created initial test files which you can run from the command line using <code>cucumber</code>.</p>

<p>One thing that worries me about the install process is that it creates a new scheme specifically for Calabash use. I don&#8217;t really like this solution as it breaks DRY and requires keeping the original scheme and the new Calabash scheme in sync. From my experience in programming, anything that is required to be kept manually in sync, won&#8217;t be. I would have preferred for the Calabash libraries to only be included in the Debug target of the main scheme or for a new target to be created on that scheme. <strong>Update:</strong> Since I wrote this post Trevor Harmon has been in touch with an alternative approach to just link in the libraries for the Debug build - more info <a href="https://groups.google.com/forum/#!topic/calabash-ios/gfDLRvYqIyo/discussion">here</a>.</p>

<p>A good blog on the Calabash install and initial test setup is <a href="http://www.moncefbelyamani.com/ios-automated-testing-with-calabash-cucumber-ruby/">here</a>.</p>

<h1>First Steps with Calabash</h1>

<ul>
<li><p>I think the Calabash <a href="https://github.com/calabash/calabash-ios/wiki/01-Getting-started-guide">wiki</a> is the best starting point for Calabash.</p></li>
<li><p>The first thing I tried was the console using <code>calabash-ios console</code>. I recommend this to play around and see what objects are visible to Calabash.</p></li>
<li><p>The command <code>query("view")</code> shows everything on screen. We can isolate specific views by filtering on the accessibility label. In some cases this wasn&#8217;t useful for me. For example, I have a table where each cell has a text field. Each of these has the same accessibility label so instead I filtered using the :text property.</p></li>
<li><p>We can find out what accessibility labels are visible using <code>label "view"</code>. Once we have a label we can do things like touching or swiping on the view or checking that the view exists using <code>view_with_mark_exists()</code>.</p></li>
<li><p>The accessibility inspector can be used to identify the classes of UI elements and the on-screen hierarchy. Launch this from XCode under the menu item XCode->Open Developer Tool->Accessibility Inspector.</p></li>
<li><p>I found that the built-in Calabash <a href="https://github.com/calabash/calabash-ios/blob/master/calabash-cucumber/features/step_definitions/calabash_steps.rb">steps</a> were very useful to base mine on.</p></li>
<li><p>A problem I had was querying for the currently active textfield from a table of textfields. The issue was that all those textfields had the same placeholder text. To get the correct one I filtered by <code>isUserInteractionEnabled</code>.</p></li>
<li><p>Errors in the name of the selector passed to the <code>backdoor</code> command show up as connection errors.</p></li>
<li><p>Initially I struggled with writing the tests at the correct level. The temptation is to be really specific in terms of UI elements e.g. When I touch X button and swipe on Y label. However you really need to describe them at a higher level e.g. when I add a new contact, when I delete an appointment etc.</p></li>
<li><p>Initially I was unable to run a backdoor command in the before hook, which runs before each test. I had wanted to reset my Core Data database &amp; UI at this time. The reason here is that the Calabash framework itself uses before hooks to connect to the app and I think my hook was being called before theirs. To solve this Calabash added support for defining an <code>on_launch</code> function which is called after the simulator has started. To implement use the following template in the <code>hooks.rb</code> file.</p>

<pre><code>  class CallbackWorld
   include Calabash::Cucumber::Operations
   def on_launch
     # here I can call backdoor and reset the app state
   end
  end

  World do
   CallbackWorld.new
  end
</code></pre></li>
<li><p>My typical test layout is to use</p>

<ul>
<li><strong>Given</strong> to put the system in a specific state - this is where I use the backdoor function to set up the app model. I do things like erase all the Core Data objects here (from <a href="http://stackoverflow.com/questions/1077810/delete-reset-all-entries-in-core-data">Stack Overflow</a>) to ensure that each test starts with a clean slate.</li>
<li><strong>When</strong> to perform an action. These are driven through the app UI.</li>
<li><strong>Then</strong> to check the results of the actions. I&#8217;ve typically done these using the app UI e.g. checking for the existence of views, the state of the UI etc. As an alternative I could also use the backdoor function to check the model here.</li>
</ul>
</li>
</ul>


<h1>Issues with Calabash.</h1>

<p>It wasn&#8217;t all smooth sailing as I did run into a few issues along the way.</p>

<ul>
<li><p>I wasn&#8217;t able to get it to integrate with my installation of Jenkins, which is unfortunate as Cucumber can output in JUnit format so it&#8217;s a perfect fit for Jenkins. The problem here is on my side as lots of users on the Calabash Google Group are running Calabash from their CI system. I think it due to the jenkins user not being able to launch the iOS simulator. I need to investigate further on this.</p>

<p>  <strong>Update:</strong> Ru Cindrea emailed me to suggest another way of running Jenkins which may fix this problem.</p>

<blockquote><p>I used to launch Jenkins like this: &#8220;sudo launchctl load /Library/LaunchDaemons/org.jenkins-ci.plist&#8221; - which seems to be the recommended way on a lot of sites I have found.</p>

<p>However, I now launch it under my own user, using &#8220;nohup java -jar /Applications/Jenkins/jenkins.war &#8211;httpPort=8080&#8221; - and everything works perfectly! I can simply use &#8220;cucumber -f junit -o results -f pretty&#8221; to start the simulator, run the tests and get my JUnit report.</p></blockquote></li>
<li><p>I had found that Calabash would frequently drop the connection to the app and fail the tests as a result. Once a test run started seeing these errors for a test (<code>Unable to make connection to Calabash Server at http://localhost:37265/</code>) then each following test in the run would show the same error. Rerunning the tests would normally sort it out in the next run or two. Both the app and Calabash would be running fine but just couldn&#8217;t seem to connect to each other. This unreliability was the most disappointing part of the tests for me.</p>

<p>  <strong>Update:</strong> Karl pointed me to the Google Group and I saw some <a href="https://groups.google.com/forum/?fromgroups=#!topic/calabash-ios/NdExaULsHz4">updates</a> that were needed to work with the new iOS 6 Simulator. I had seen that black screen issue as part of trying to get it working with Jenkins. So I&#8217;ve updated to the latest version of Calabash and on the first test run, everything worked fine. Hopefully this will resolve the issue in future.</p></li>
</ul>


<h1>Initial Impressions &amp; Next Steps</h1>

<p>I have to say that I&#8217;m very impressed with Calabash and indeed Cucumber in general. I think that writing these type of tests beforehand would be helpful for requirements gathering and feature design. The tests themselves are not only useful as tests but also as documentation. Unlike Word docs, we can be guaranteed that these accurately describe the current state of the system, given that they are actually run against it.</p>

<p>My plans for the future</p>

<ul>
<li>I need to add more tests. I initially tested this with just a single feature and that&#8217;s worked out so well that I&#8217;ll add this to the other features.</li>
<li>From now on, I also plan to write these type of tests for a feature before implementing it. I think that the Cucumber tests especially with the language they are written in are very effective when thinking through the behaviour of the app. They force you to describe it in high level terms rather than just diving into coding.</li>
<li>My tests currently have a lot of duplication. Once I have written a lot more of them and I gain more Ruby experience, I will look to refactor them.</li>
</ul>


<p><strong>Update:</strong> After my initial post Karl Krukow emailed me with some updates on the issues I was having and I&#8217;ve integrated those into the blog post. He pointed out that there is a <a href="https://groups.google.com/forum/?fromgroups#!forum/calabash-ios">Google Group</a> for Calabash on iOS where you can ask questions and share information.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Further Jenkins Setup for iOS]]></title>
    <link href="http://www.gerardcondon.com/blog/2012/09/20/further-jenkins-setup-code-signing/"/>
    <updated>2012-09-20T01:15:00+01:00</updated>
    <id>http://www.gerardcondon.com/blog/2012/09/20/further-jenkins-setup-code-signing</id>
    <content type="html"><![CDATA[<p>Last <a href="http://www.gerardcondon.com/blog/2012/09/16/setting-up-jenkins-on-os-x/">time</a> I went through how I set up jenkins on iOS and built a simple static library. All in all, that process went ok. The next step was to build an actual app. Unfortunately I encountered a lot more issues with this.</p>

<p>The first error I got was</p>

<pre><code>Code Sign error: The identity 'iPhone Developer' doesn't match any valid certificate/private key pair in the default keychain` 
</code></pre>

<p>This <a href="http://stackoverflow.com/questions/9245149/jenkins-on-os-x-xcodebuild-gives-code-sign-error/9246321#9246321">post</a> on Stack Overflow has a really detailed set of instructions on how best to fix this. Unfortunately as my iPhone developer account is not a business one, I can&#8217;t add a jenkins user to it. So to solve my problem I added my certificate to the system keychain so that now my local jenkins user can access it.</p>

<p>Once that was out of the way, the next issue to rear its head was a provisioning profile error.</p>

<pre><code>Code Sign error: A valid provisioning profile matching the application's Identifier '...' could not be found
</code></pre>

<p>I found the solution to this again on <a href="http://stackoverflow.com/questions/10454628/xcodebuild-code-sign-error-provisioning-profile-x-cant-be-found">Stack Overflow</a>.
I needed to copy my provisioning profile from <code>~/Library/MobileDevice/Provisioning</code> to the jenkins user&#8217;s folder at <code>/Users/Shared/Jenkins/Home/Library/MobileDevice/Provisioning Profiles</code>.</p>

<p>The next reason for the build failing was that I was invoking xcodebuild using a target instead of a scheme. The target worked fine for the static library but was failing for the app as it was unable to find all the include files. Once I switched to building a scheme, the build worked fine. Building via a scheme or target is easy to configure using the Jenkins XCode plugin. You set the XCode Schema File entry to the name of the XCode build scheme.</p>

<p>Nearly there! Now that the build was working I turned my attention to getting the unit tests running. The <code>TEST_AFTER_BUILD</code> flag that had worked before wasn&#8217;t working this time. Fortunately I found the solution on Peter Jihoon Kim&#8217;s <a href="http://www.raingrove.com/2012/03/28/running-ocunit-and-specta-tests-from-command-line.html">blog</a>. I needed to create a new scheme to run my tests. Once that was done I got this error</p>

<pre><code>/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Tools/Tools/RunPlatformUnitTests:95: warning: Skipping tests; the iPhoneSimulator platform does not currently support application-hosted tests (TEST_HOST set).
</code></pre>

<p>Peter&#8217;s blog describes the fix for this. You need to patch the <code>RunPlatformUnitTests</code> file in order to remove the warning printout and invoke the tests.</p>

<p>The last error I had to deal with was with the code coverage. I started seeing errors with <code>fopen$UNIX2003</code> and <code>fwrite$UNIX2003</code>. I had seen this issue on other blogs before but hadn&#8217;t encountered it myself until I tried building an app using the command line. The solution as described <a href="http://stackoverflow.com/questions/8732393/code-coverage-with-xcode-4-2-missing-files">here</a> is to add implementations of these into your application which simply call the standard C functions.</p>

<pre><code>#include &lt;stdio.h&gt;

FILE *fopen$UNIX2003( const char *filename, const char *mode )
{
    return fopen(filename, mode);
}

size_t fwrite$UNIX2003( const void *a, size_t b, size_t c, FILE *d )
{
    return fwrite(a, b, c, d);
}
</code></pre>

<p>One unresolved issue was that I couldn&#8217;t get clang scan plugin working for this setup. I think the issue here is that it was using targets instead of schemes. I left this one go as I didn&#8217;t feel it important enough to get working. XCode runs this while I&#8217;m developing anyway. I may come back to it in future once everything else is stable.</p>

<h3>XCode 4.5 Updates</h3>

<p>So, just when I got everything working for XCode 4.4, along comes XCode 4.5. Ever since the 4.2 to 4.3 transition broke code coverage for me, I&#8217;ve been a bit wary of XCode updates. Sure enough after installing 4.5 and trying to build my app, I got an error message saying that the calabash framework was missing a armv7s slice</p>

<pre><code>ld: file is universal (2 slices) but does not contain a(n) armv7s slice: 
...calabash.framework/calabash for architecture armv7s
</code></pre>

<p><a href="http://calaba.sh">Calabash</a> is part of an iOS testing framework based on <a href="http://cukes.info">Cucumber</a>. I&#8217;ve just started to implement this form of testing and it looks really nice. Getting back to the build issue, Ash Furrow has a detailed <a href="http://ashfurrow.com/fix-ios-6-sdk-linker-error">post</a> on this issue. We need to remove armv7s (which refers to the new A6 chip in the iPhone 5) from our valid architectures. Once Calabash gets updated to support this architecture, I can reenable it.</p>

<p>Once everything built in XCode, it was time to try the jenkins build. Naturally this broke also. The problem was that the XCode plugin couldn&#8217;t find the 5.1 simulator.</p>

<pre><code>xcodebuild: error: SDK "/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator5.1.sdk" cannot be located.
</code></pre>

<p>XCode 4.5 had wiped out the simulators for 5.1 so I needed to redownload them. I was able to download these from Preferences->Downloads->Components. XCode also prompted me to download the 6.0 simulator so I got that out of the way while installing 5.1.</p>

<p>Once the simulators were installed I started hitting the same <code>RunPlatformUnitTests</code> error as above. When I opened the script file to reinsert Peter&#8217;s edits I saw that it had changed slightly. Now the error printout was happening in a function on line 80 which overrode <code>RunTestsForApplication()</code>. I deleted that function and I added back in the original patch at line 118 so that now it looks like</p>

<pre><code>if [ "${TEST_HOST}" != "" ]; then
    # All applications are tested the same way, by injecting a bundle.
    # The bundle needs to configure and run the tests itself somehow.
    export CFFIXED_USER_HOME="${BUILT_PRODUCTS_DIR}/UserHome/"
    mkdir -p "${CFFIXED_USER_HOME}"
    mkdir -p "${CFFIXED_USER_HOME}/Library/Caches"
    mkdir "${CFFIXED_USER_HOME}/Library/Preferences"
    mkdir "${CFFIXED_USER_HOME}/Documents"
    export OTHER_TEST_FLAGS="${OTHER_TEST_FLAGS} -RegisterForSystemEvents"

    RunTestsForApplication "${TEST_HOST}" "${TEST_BUNDLE_PATH}"
else
    # If no TEST_HOST is specified, assume we're running the test bundle.

    RunTestsForBundle "${TEST_BUNDLE_PATH}"
fi
</code></pre>

<p>These changes fixed the 4.5 build issues and now I have a working build and test setup again. Finally!!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting up Jenkins on OS X]]></title>
    <link href="http://www.gerardcondon.com/blog/2012/09/16/setting-up-jenkins-on-os-x/"/>
    <updated>2012-09-16T13:24:00+01:00</updated>
    <id>http://www.gerardcondon.com/blog/2012/09/16/setting-up-jenkins-on-os-x</id>
    <content type="html"><![CDATA[<p>First post in a long time. I didn&#8217;t really do much iOS development over the summer and am only starting to get back into it in the past few weeks. I have some draft posts on my dealings with both Core Data and UITableViews and once those features are complete I&#8217;ll post them.</p>

<p>Along with coding, I&#8217;ve been looking at adding some build infrastructure for my projects. Having seen <a href="http://jenkins-ci.org/">Jenkins</a> used at work, I wanted to get a CI system set up for my builds here at home. I want to use it to kick off a build, run the tests and package up the iPhone app. By using something like Jenkins I can automate my build and testing process and also have a record of previous builds.</p>

<h2>Jenkins Install</h2>

<p>The first step was to install Jenkins. They provide a Mac installer - the only annoyance is that it triggers the new OS X Gatekeeper dialog blocking unsigned apps from installing. Then I loaded locahost:8080 in my browser to find that Jenkins wasn&#8217;t loading and there was no error message telling me what went wrong. D&#8217;oh. The issue is that Jenkins requires Java to run but it isn&#8217;t installed by default on OS X. To install simply type <code>java</code> into a terminal and a message box will appear prompting you to install Java.</p>

<p>Then I followed the user setup from Moritz Haarmann&#8217;s <a href="http://momo.brauchtman.net/2011/11/12/howto-install-jenkins-on-os-x-and-make-it-build-mac-stuff/">blog</a>. I&#8217;m not sure if the jenkins account part is still necessary, as when I got to the stage about changing the user name in the plist file, it had already been set to Jenkins. The changing permissions on the Jenkins home folder was needed though. After that I was able to run ssh-keygen and generate some keys.</p>

<h2>Updating Git Workflow</h2>

<p>I installed the Git and XCode plugins from the Manage Jenkins screen with no issues. I then created a simple project to test it out. I just added a git clone step. This failed for me with the following errors</p>

<pre><code>Failed to connect to repository : Command "git ls-remote -h ..../MyApp.git HEAD" returned status code 128:
stdout: 
stderr: fatal: '..../MyApp.git' does not appear to be a git repository
fatal: The remote end hung up unexpectedly
</code></pre>

<p>The problem here is that the repository is on my Dropbox account (as described <a href="http://www.gerardcondon.com/blog/2012/01/26/version-control-in-xcode-using-git-and-dropbox/">here</a>). This folder is not visible to the jenkins user. I didn&#8217;t want to mess around with changing permissions on the Dropbox folder so I looked for an alternative solution. A colleague at work told me about <a href="https://bitbucket.org/">Bitbucket</a> from Atlassian. This is similar to <a href="http://www.github.com">Github</a> but allows for private repositories. As luck would have it, I had already been using another Atlassian product <a href="http://www.sourcetreeapp.com/">SourceTree</a> to manage my git repositories. This tool works seamlessly with Bitbucket. Once I uploaded my ssh key to Bitbucket I could simply add another remote repository to my local repository and push to it, all from within SourceTree.</p>

<p>Now that I had a repository on Bitbucket, it was time to integrate that with Jenkins. This turned out to be fairly easy. I uploaded the ssh key for the jenkins account to Bitbucket. The admin page for the repository showed its ssh address so I added a Git build step to the project using that ssh address. When the project is built now, Jenkins will download the latest code from the repository first and then continue on.</p>

<h2>Jenkins Issues</h2>

<p>While Jenkins is mostly working fine now, there were a few issues I&#8217;ve run into. The git checkout isn&#8217;t working at all using the Git Plugin. Originally it did but then I started getting the following errors</p>

<pre><code>FATAL: Could not checkout null with start point 02dbc3e456d6aa6079543eeaa8361bdebe8fac9d
hudson.plugins.git.GitException: Could not checkout null with start point 02dbc3e456d6aa6079543eeaa8361bdebe8fac9d
    at hudson.plugins.git.GitAPI.checkoutBranch(GitAPI.java:956)
    ...

Caused by: hudson.plugins.git.GitException: Command "git checkout -f 02dbc3e456d6aa6079543eeaa8361bdebe8fac9d" returned status code 128:
stdout: 
stderr: fatal: reference is not a tree: 02dbc3e456d6aa6079543eeaa8361bdebe8fac9d
</code></pre>

<p>I wasn&#8217;t able to find a solution to this so I had to stop using the Git plugin and just add an <code>execute shell</code> build step to clone the Bitbucket git repository. As I add more projects to Jenkins, I&#8217;ll check if I get the same issues there also.</p>

<h2>Build XCode Project</h2>

<p>The <a href="http://www.XXX.com">XCode plugin</a> for Jenkins made it really easy to build once setup. You add an XCode build step and configure it as necessary. I chose to do a clean build each time. The project I tested this on was a static library so I didn&#8217;t need an IPA built or any of the version number updates but they should be useful when building a proper app.</p>

<p>When I first tried to build I got an error saying <code>You have not agreed to the Xcode license agreements</code>. I needed to run <code>sudo xcodebuild -license</code> in the terminal to fix this.</p>

<p>In order to run the unit tests, the XCode plugin recommends using two build steps, one to build the app and the other to execute the tests. The reason for this is that the test step requires extra parameters i.e. path to the simulator SDK. If you&#8217;re using the OCTest framework which comes with XCode then the plugin will listen to the test output and generate JUnit compatible xml files. Jenkins can read these and add the to the build results page.</p>

<h2>Set up Coverage</h2>

<p>Setting up code coverage for iOS projects is not an easy task. My gcov setup for XCode 4.3 still worked for me but the problem was to integrate this with Jenkins. Coverstory would not be of use here but I found this <a href="https://software.sandia.gov/trac/fast/wiki/gcovr">gcovr</a> script from the <a href="http://blog.octo.com/en/jenkins-quality-dashboard-ios-development/">Octo Talks</a> blog. Gcovr will convert the gcov output into a <a href="http://cobertura.sourceforge.net/">cobertura</a> xml file which can be read by Jenkins.</p>

<p>One problem I had was that for some reason, gcov wouldn&#8217;t work on the files in the Jenkins workspace. I was getting <code>gcno:cannot open graph file</code>errors. Coverstory also didn&#8217;t work on the files in this location. What worked for me was to copy the gcda and gcno files out to a temp folder under /Users/Shared/Jenkins/Home. Passing the original build location as the root parameter to gcovr allowed the cobertura plugin to find the source code in the html report, while also removing system headers from the coverage report. Here is the script.</p>

<pre><code>cp -r ${WORKSPACE}/build/${JOB_NAME}.build/Coverage-iphonesimulator/${JOB_NAME}.build/Objects-normal/i386/*.gc* /Users/shared/Jenkins/tmp/${JOB_NAME}
cd /Users/shared/Jenkins/tmp/${JOB_NAME}
gcovr -r $WORKSPACE/$JOB_NAME -x &gt; ${WORKSPACE}/coverage.xml
</code></pre>

<p>The <a href="http://blog.octo.com/en/jenkins-quality-dashboard-ios-development/">Octo Talks</a> blog also suggested a number of other metrics which could be captured in Jenkins. I added the SLOC Count and the Clang Build Scan. Both of these required installing tools and then Jenkins plugins which used those tools. This instructions on the blog covered this. Ones that I&#8217;ve put on the someday/maybe list are the PMD plugin and OCLint.</p>

<p>At the end of all this, Jenkins is working quite well for my simple test project. Next step is to try it out on my app.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Localizing iOS Apps]]></title>
    <link href="http://www.gerardcondon.com/blog/2012/05/19/localizing-ios-apps/"/>
    <updated>2012-05-19T16:54:00+01:00</updated>
    <id>http://www.gerardcondon.com/blog/2012/05/19/localizing-ios-apps</id>
    <content type="html"><![CDATA[<p>I was looking at a tutorial for creating a settings bundle for my app and it had separate files for different languages. I realised that I hadn&#8217;t a clue how to localize iOS applications. I decided I&#8217;d better look into it now, rather than at the end of development, in case it required me to change existing code. Much better to implement with localization in mind, than retrofit at the end of development.</p>

<p>I&#8217;m interested to see how many translations I&#8217;ll be able to include in the app. I&#8217;m not sure how easy it will be to do the translation or even how much text there will be to translate. I&#8217;m planning a Chinese translation and for sentimental reasons I&#8217;ll do an Irish translation. I&#8217;ll probably try to get some European languages done also. I think that once I put in the infrastructure to do one language then adding additional ones shouldn&#8217;t be too much bother.</p>

<p>The basics of implementing localization is that you externalize all strings in your application to .strings files and then provide versions of these files for each language you support. The process for creating the basic localization.strings file is outlined <a href="http://userflex.wordpress.com/2011/10/20/localized-strings-xcode4/">here</a>. In your code you can get the localized values for these strings using <code>NSLocalizedString(@"Externalized String Name", @"")</code>.</p>

<h2>Localization Tools</h2>

<p>Using this method, we will have to deal with lots of .strings files. Xcode doesn&#8217;t provide much help here so I looked around for third party apps. I bought <a href="http://www.cocoanetics.com/apps/linguan/">Linguan</a> on the Mac App Store and it looks very good. You point it at an Xcode project file and it locates all the .strings files and presents them in a nice table. It can generate text files which you can send on to your translators for them to translate and re-import their translations. I&#8217;m very pleased with it so far.</p>

<p>Apart from having .strings files for strings in the code, I also need to localize the app&#8217;s storyboards. Albert Mata has a fantastic tutorial on how to do this <a href="http://www.albertmata.net/articles/introduction-to-internationalization-using-storyboards-on-ios-5.html">here</a>. A big problem with localizing storyboards is that changes in one language&#8217;s storyboards are not propagated to the others. Manually keeping these in sync would be a nightmare. Thankfully there is a handy script <a href="http://code.google.com/p/edim-mobile/source/browse/trunk/ios/IncrementalLocalization/localize.py">here</a> by Ederson Machado, which will update the .strings files for the storyboard and also keep the storyboards in sync. There is a nice video outlining the features of the script <a href="http://www.youtube.com/watch?v=cF1Rf02QvZQ">here</a>. By adding this script as a build run script, we can ensure that our storyboards are always in sync.</p>

<h2>Localization Workflow</h2>

<p>My localization workflow is as follows:</p>

<ul>
<li>First I created multiple storyboards for each language using the Localization area on the sidebar. This will create a language.proj folder for each language.</li>
<li>I ran the localize.py script on the project. This generated the mainstoryboard.strings files in each of the language folders.</li>
<li>I manually add these files to Xcode. First I added the English version. Then I clicked the plus button in the Localization sidebar and added the other languages. Xcode is able to find those .strings files and link them to the overall file.</li>
<li>I create a localization.strings file to deal with the strings in the code and added all languages.</li>
<li>I ran genstrings but I don&#8217;t think this is needed if you&#8217;re using Linguan.</li>
<li>When I opened the project in Linguan it was able to find all the strings files, including those from the storyboard.</li>
</ul>


<p>I&#8217;m satisfied now that I have the localization mostly under control. One thing I still need to look at is how does this affect testing. Hopefully any test framework that I used will be able to run the tests in all languages.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Starting out with Core Data]]></title>
    <link href="http://www.gerardcondon.com/blog/2012/05/15/starting-with-core-data/"/>
    <updated>2012-05-15T21:59:00+01:00</updated>
    <id>http://www.gerardcondon.com/blog/2012/05/15/starting-with-core-data</id>
    <content type="html"><![CDATA[<p>For my project, I need a way to store the model data that I will be generating. I certainly don&#8217;t want to write a persistence layer for my model objects so I will definitely use a standard library for this. There are a number of options</p>

<ul>
<li>Core Data. This provides an editor to create the objects and XCode will generate the required model classes for me.</li>
<li>Use a database like Sqlite directly. Core Data uses a sqlite database behind the scenes but instead I could create one directly and access it using a library like <a href="https://github.com/ccgus/fmdb">FMVH</a>.</li>
<li>A service like <a href="http://www.parse.com">Parse.com</a>. This provides an online backend for apps.</li>
</ul>


<p>I don&#8217;t want to use the database directly as I prefer working with objects, so that would rule out sqlite for me. Parse.com is really interesting. Among other things, it provides an online site where you can see the data in a spreadsheet interface. This <a href="http://houseofbilz.com/archives/2011/11/30/an-example-backboneparse-com-app/">tutorial</a> shows how you can use Parse.com to implement a todo list website. It&#8217;s a real pity that iCloud doesn&#8217;t provide a similar API to allow non-Apple devices access the data.</p>

<p>In the end I&#8217;ve decided to go with Core Data. The reasons for this are</p>

<ul>
<li>It&#8217;s an Apple standard library and one of the purposes of writing an app was to learn about iOS and Apple technologies. Where possible I&#8217;ve tried to stick to the Apple way of doing things as I can be sure that this approach will be supported in future - or if there is a new system, then a transition path will be provided.</li>
<li>Core Data works on the object level rather than the database level. I&#8217;ve programmed in objects for most of my career so this is familiar to me. I have a working knowledge of databases but I feel more comfortable using OOP.</li>
<li>I&#8217;m assuming that Core Data should integrate with iCloud better than other approaches. Thinking ahead I&#8217;d like to look at iCloud at some stage and learning Core Data first should make that a bit easier.</li>
</ul>


<h2>Magical Record and Mogenerator</h2>

<p>There are some good Core Data tutorials out there. The best introduction that I found was the <a href="http://www.stanford.edu/class/cs193p/cgi-bin/drupal/downloads-2011-fall">Stanford</a> iOS course (lectures 13 &amp; 14). To be honest, the code required to implement Core Data is fairly complex and verbose. To deal with that, I started looking for libraries which would improve the Core Data experience. The best I found is <a href="https://github.com/magicalpanda/MagicalRecord">Magical Record</a>. This library simplifies Core Data a great deal and provides loads of helper categories &amp; functions. There is an excellent tutorial on MagicalRecord <a href="http://yannickloriot.com/2012/03/magicalrecord-how-to-make-programming-with-core-data-pleasant/">here</a>. I also found <a href="http://ablfx.com/blog/?post_type=post&amp;p=561">this</a> tutorial really good and it also includes a sample project which uses MagicalRecord.</p>

<p>Magical Record works well with another tool called <a href="https://github.com/rentzsch/mogenerator">Mogenerator</a>. You download a .dmg from the site and install from that. There is a nice tutorial <a href="http://raptureinvenice.com/getting-started-with-mogenerator/">here</a>. Mogenerator generates classes from the Core Data xcdatamodel file. The normal Core Data build can also do this but the advantage of Mogenerator is that it generates a second set of classes for each Core Data entity. This second set will never be overwritten so you can write custom code in these. The first set of classes will be regenerated each time the model gets updated.</p>

<p>Magical Record is available on Github. Like most iOS projects I&#8217;ve found there, it seems the standard way to integrate this with your project is to copy the source files into your code and work away. I&#8217;m not too comfortable with this approach and would prefer to keep third party libraries separate from my code. This would allow me to update these independently and share them between projects. I&#8217;ll have to look into what options are available for this.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Joined the iOS Developer program]]></title>
    <link href="http://www.gerardcondon.com/blog/2012/04/29/joined-the-ios-developer-program/"/>
    <updated>2012-04-29T21:40:00+01:00</updated>
    <id>http://www.gerardcondon.com/blog/2012/04/29/joined-the-ios-developer-program</id>
    <content type="html"><![CDATA[<p>I&#8217;ve been fairly busy with the Start Your Own Business course so I haven&#8217;t had much time to do iOS programming. It&#8217;s time to get back into it now though, and so I&#8217;ve just paid my subscription to the iOS developer program. I&#8217;m looking forward to being able to run code on an actual device. It&#8217;s been a bit limiting working on just the simulator and there&#8217;s nothing like seeing your code running on the final hardware.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Where have all the SRPGs gone]]></title>
    <link href="http://www.gerardcondon.com/blog/2012/04/02/where-have-all-the-srpgs-gone/"/>
    <updated>2012-04-02T00:27:00+01:00</updated>
    <id>http://www.gerardcondon.com/blog/2012/04/02/where-have-all-the-srpgs-gone</id>
    <content type="html"><![CDATA[<p>I had a draft post pre-written earlier this year lamenting the decline of the SRPG game genre. In brief, I used to import these types of games all the time from America for my PS2. I assumed that this would continue for the PS3 and really enjoyed <a href="http://www.eurogamer.net/games/valkyria-chronicles-ps3">Valkyria Chronicles</a>, but after that the genre has pretty much disappeared for the mainstream consoles. Even on PSN and Xbox live, there has been very little released (<a href="http://www.eurogamer.net/articles/vandal-hearts-flames-of-judgment-review">Vandal Hearts</a> excepted). Modern games seemed to be limited more and more to mass market genres such as the 3D first person shooter.</p>

<p>However in the past month a surprising new development in game development has kind of invalidated my draft post. Veteran game designers have started to use Kickstarter to seek funding for niche game genres with some amazing results. The first big <a href="http://www.kickstarter.com/projects/66710809/double-fine-adventure">success</a> on Kickstarter was Tim Schafer, Ron Gilbert and Double Fine raising over three million to make a new adventure game. I love the Monkey Island games so I backed this - it was actually the first thing I&#8217;d ever supported on Kickstarter. I have no idea if the game will be any good but given the caliber of the people involved, I think it&#8217;s in safe hands. To be honest, the videos they&#8217;ve made for the project have been worth the cash already.</p>

<p>Following on from that Brian Fargo launched a <a href="http://www.kickstarter.com/projects/inxile/wasteland-2">Wasteland 2</a> project. This is an attempt to revive the party based CRPGs. This was another genre that I really enjoyed and which stagnated recently. Today&#8217;s publishers aren&#8217;t willing to put up the cash for these games. I&#8217;ve started to contribute to more of these gaming projects on Kickstarter (including a space based game - <a href="http://www.kickstarter.com/projects/64409699/ftl-faster-than-light">FTL</a> and a Norse SRPG - <a href="http://www.kickstarter.com/projects/stoic/the-banner-saga">The Banner Saga</a>). Hopefully this will show that there is a sizable market for these games and they will be more likely to be funded in future. It&#8217;s really interesting how much more invested in the games you feel once you back them on Kickstarter. For example, I&#8217;m really enjoying reading the updates from the game developers. If I was an indie developer I would definitely go down this route. The community that the Kickstarter project creates for your game might be as important as the funding itself.</p>

<p>Another other thing this has made me realize is how much reputation and track record matters. I had never heard of Wasteland 2 before backing it. However once Brian Fargo reeled off the list of games that he&#8217;d worked on, i.e. Fallout, Baldur&#8217;s Gate and Icewind Dale (all of which still sit proudly on my shelf), I had no hesitation in subscribing. I would much rather see people like him develop games instead of leaving it in the hands of companies like Zynga. Trying to learn from this, I think that having a portfolio would be really valuable for a software engineer. Imagine the kind of CV/resume you&#8217;d have if you developed one app, website or side project per year and hosted these online. Given the frameworks and services that are out there e.g. <a href="http://rubyonrails.org/">Rails</a>, <a href="http://www.parse.com">Parse.com</a>, <a href="http://www.heroku.com">Heroku</a> for the web, iOS and Android for mobile, I think it&#8217;s never been easier to create quality small scale projects. To be honest I wish I had started something like that years ago. If I was coming out of college now, one of the first things I&#8217;d do would be to register my name as a url and start hosting projects there. It&#8217;s something small but would really pay off down the line.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Start your own Business Course]]></title>
    <link href="http://www.gerardcondon.com/blog/2012/03/20/start-your-own-business-course/"/>
    <updated>2012-03-20T23:46:00+00:00</updated>
    <id>http://www.gerardcondon.com/blog/2012/03/20/start-your-own-business-course</id>
    <content type="html"><![CDATA[<p>I&#8217;ve signed up for a Start Your Own Business <a href="http://www.sceb.ie/Online-Booking#Start-Your-Own-Business">course</a> which is being run by the <a href="http://www.sceb.ie">South Cork Enterprise Board</a>. It&#8217;s an eight week course taking three hours every Thursday. I&#8217;ve no intention of leaving my current job but if I&#8217;m going to be doing this on the side, then I&#8217;d like to know how to do it properly and what type of supports are out there.</p>

<p>I&#8217;ve gone to three nights already and I&#8217;m finding it very useful. I think that the process of creating a business plan focuses your mind on what you want to achieve. I&#8217;ve asked myself more questions about what I want to do with this app development in the past few weeks than in the previous two months. It&#8217;s also interesting meeting people there who are setting up non software businesses and seeing what common problems and tasks we have. It&#8217;s good to step outside the software/computing world for a bit and get a wider perspective on things. I hope to come out of this with a clear idea of where I want to take the app work and what I need to do to accomplish this.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting up a Blog on Octopress and Github]]></title>
    <link href="http://www.gerardcondon.com/blog/2012/03/04/setting-up-octopress-and-github/"/>
    <updated>2012-03-04T13:39:00+00:00</updated>
    <id>http://www.gerardcondon.com/blog/2012/03/04/setting-up-octopress-and-github</id>
    <content type="html"><![CDATA[<p>This post documents how I migrated the blog from <a href="http://www.wordpress.com">Wordpress.com</a> to <a href="http://www.octopress.org">Octopress</a>. There are a number of bloggers who have written about switching their blogs to Octopress. I found these posts very helpful - <a href="http://scottmuc.com/migrated-to-octopress/">Scott Muc</a>, <a href="http://mattgemmell.com/2011/09/12/blogging-with-octopress/">Matt Gemmell</a> and <a href="http://blog.bigdinosaur.org/setting-up-octopress/">Bigdinosaur Blog</a>. The basic sequence of steps I followed was</p>

<ul>
<li>Install Ruby.</li>
<li>Install Octopress.</li>
<li>Create account on <a href="http://www.github.com">Github</a>.</li>
<li>Export previous blog from Wordpress and convert it to Markdown</li>
<li>Generate Octopress blog and publish it to Github.</li>
<li>In parallel I registered www.gerardcondon.com and set it up so that it pointed to the blog on Github.</li>
<li>Setup a drafts folder on Dropbox so that I can write posts from anywhere.</li>
</ul>


<h2>Ruby Setup</h2>

<p>The first step is to install <a href="http://www.ruby-lang.org/en/">Ruby</a>. If you want to, you can compile this from the source but the better option is to use a third party tool to install and manage Ruby. The one I used is <a href="https://rvm.beginrescueend.com/rvm/install/">RVM</a>.</p>

<p>By default OS X Lion comes with 1.8.7 pre-installed but Octopress needs 1.9.2. (I tried 1.9.3 at first but Octopress reported an error). I read on Stack Overflow that it&#8217;s not recommended to upgrade the default installation but instead to install the newer version alongside it. RVM is designed to manage multiple versions of Ruby on a system so it&#8217;s a nice fit here.</p>

<p>The command to install Ruby is <code>rvm install 1.9.2</code>. However when I tried this I got errors complaining that the C compiler was LLVM based instead of gcc. To get around this I added the following flag <code>rvm install 1.9.2 --with-gcc=clang</code>. Now we can tell RVM to use version 1.9.2 with this command <code>rvm use 1.9.2</code>.</p>

<h2>Install Octopress</h2>

<p>Installing Octopress is very easy once Ruby is installed. The instructions can be found at <a href="http://octopress.org/docs/setup/">Octopress Setup</a>. The install command is <code>rake install</code> and then to build your website run <code>rake generate</code>. Octopress takes whatever pages and posts it finds under the source folder and builds these to a static website. These need to have particular file names and contents, so Octopress provides helper commands to generate a new post or page. These are <code>rake new_page["page_title"]</code> and <code>rake new_post["post_title"]</code> respectively.</p>

<h2>Export from Wordpress</h2>

<p>To export from Wordpress I simply used their export tool. This exported all the posts in their own html files. This would have been fine for Octopress but I wanted the whole site in Markdown, so I converted each post from html to markdown and added to the source/_posts folder.</p>

<h2>Host on Github</h2>

<p>Once you have the Octopress blog created you need to host it somewhere. I choose Github as it provides for free hosting of static blogs. Also if I do release some iOS code later it will be on Github, so there&#8217;s no harm in getting it set up now.</p>

<p>This <a href="http://code.dblock.org/octopress-setting-up-a-blog-and-contributing-to-an-existing-one">site</a> has a very good explanation of what is going on with Github. Basically we build our website locally to a folder named public. We create a repository on Github for our webpage. Octopress then uploads the contents of the public folder to the master branch on this repository whenever we run the <code>rake deploy</code> command. It is recommended that you upload the site source to a source branch on the repository. That way you can always regenerate the website even if you delete the local files.</p>

<h2>Register URL</h2>

<p>I decided to register www.gerardcondon.com for this site as I didn&#8217;t want to be tied to a Github url in the same way as I was tied to the Wordpress.com one. I didn&#8217;t need hosting or anything special - just forwarding. I used <a href="http://www.namecheap.com">Namecheap</a>. The price is really cheap for a .com address - only 6 or 7 dollars a year.</p>

<p>There are instructions on <a href="http://pages.github.com">Github Pages</a> on how to set up the forwarding. You need to setup an A record to redirect to www.github.com for your url without the www part, i.e. gerardcondon.com will redirect to www.github.com. Then you need to create a CNAME file in github and then setup a CNAME redirect for the www part of the url, i.e. www.gerardcondon.com redirects to gerardcondon.github.com. However I ran into some problems doing this on the namecheap site. When I tried to setup the CNAME I got the following errors</p>

<p><code>Improper records were NOT saved!</code>
<code>There were issues with some records and they were either set to default or completely removed. Please review the issues below and update again appropriately.</code>
<code>INVALID_ADDR: 'gerardcondon.github.com/' should not be an IP/ URL for CNAME record. (host name: www)</code></p>

<p>However I just connected to the online chat support and the person assigned to me fixed it up in a few minutes - I have to say they were really helpful. This DNS stuff takes a while to settle down - I think it was a day or so before it had propagated out. Since then I&#8217;ve had no trouble with it.</p>

<h2>Octopress tweaks</h2>

<p>I&#8217;ve made a few tweaks to Octopress to suit my own tastes.</p>

<ul>
<li>I changed the indented-lists setting to true in sass/custom/_layout.scss. Previously the numbers and bullets for lists were not in line with the rest of the post text but instead were placed in the left margin.</li>
<li>I reduced the size of the blockquotes in the sass/base/_typography.scss file, from 1.2 em down to 1 em to be the same size as normal text.</li>
<li>I changed the solarized theme from dark to light in sass/base/_solarized.scss.</li>
</ul>


<p>It&#8217;s really easy to make changes to Octopress, there is a folder called sass with most of the style stuff. There are a few configuration files also which can be updated. One nice thing about checking all this stuff into github is that you can go back and see what style updates you made in previous commits.</p>

<h2>Add Draft folder and sync with Dropbox</h2>

<p>At this stage Octopress was installed on my Macbook Air and working perfectly for me. One limitation of this setup was that I could only edit posts from that machine. I didn&#8217;t mind only being able to regenerate the site from the Air as that&#8217;s not a common task, but I wanted to be able to write posts from anywhere. I also wanted the ability to write draft posts and not have Octopress automatically publish those.</p>

<p>I found a technique for managing draft posts on <a href="http://www.i-m-code.com/blog/blog/2012/01/25/target-any-deployment-environment-in-octopress-with-ease/">Frozen Bytes</a>. This allows you to create a drafts folder and provides commands for moving posts between the draft and published state.</p>

<p>Using this, I created a folder called drafts in Dropbox. I then symlinked to this from inside the sources directory on the Air. All my drafts are now available in Dropbox and I can edit these anywhere. This is especially useful when editing from iOS as there are a number of markdown editors which can edit files on Dropbox.</p>

<h2>Summary</h2>

<p>I think that&#8217;s everything! It was fairly straightforward in retrospect to set up. The new setup works really well. I&#8217;m very happy with the look of Octopress and the editing workflow in markdown is much better than using the Wordpress editor. Looking forward to using it in future.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OS X Mountain Lion]]></title>
    <link href="http://www.gerardcondon.com/blog/2012/02/22/os-x-mountain-lion/"/>
    <updated>2012-02-22T00:06:00+00:00</updated>
    <id>http://www.gerardcondon.com/blog/2012/02/22/os-x-mountain-lion</id>
    <content type="html"><![CDATA[<p>Apple has just announced <a href="http://www.apple.com/macosx/mountain-lion">Mountain Lion</a>, the latest update to OS X, and it looks to have some interesting features. The main one I&#8217;m looking forward to is the addition of <a href="http://www.apple.com/macosx/mountain-lion/features.html#airplay">AirPlay</a> to the Mac. I love being able to stream video from the iPhone to the Apple TV. It&#8217;s really handy for the iTunes U lectures. However for normal videos that I have on the Mac, it&#8217;s annoying to have to convert them via <a href="http://www.inmethod.com/forum/posts/list/4529.page">Air Video Server</a> on the Mac and then use <a href="http://www.inmethod.com/air-video/index.html">Air Video</a> on the iPhone to get them to display on the Apple TV. Having AirPlay on the Mac stream directly to the Apple TV will be very handy. According to the docs, it&#8217;s just for streaming applications and presentations but perhaps they will open it up to interactive applications in future. I wonder what the latency would be like on this and if eventually it would be possible to play games via the Apple TV.</p>

<p>I&#8217;m finding that as I integrate more and more Apple devices into my setup, they all make each other work better. AirPlay is one example of this. Another is iTunes match which really starts to excel when you have multiple devices. Previously it was impossible to keep multiple iTunes in sync. It was a nightmare trying to add new music as it had to be added to each library separately. Now my music library is always in sync everywhere and when I add music to one library, it gets uploaded and is available on all others immediately. I haven&#8217;t always been too impressed with Apple&#8217;s cloud services (i.e. MobileMe was a bit of a disaster) but they&#8217;ve got it right with iTunes Match.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Code Coverage Updates for Xcode 4.3]]></title>
    <link href="http://www.gerardcondon.com/blog/2012/02/21/code-coverage-updates-for-xcode-4-dot-3/"/>
    <updated>2012-02-21T00:02:00+00:00</updated>
    <id>http://www.gerardcondon.com/blog/2012/02/21/code-coverage-updates-for-xcode-4-dot-3</id>
    <content type="html"><![CDATA[<p>In a previous <a href="http://www.gerardcondon.com/blog/2012/02/17/adding-code-coverage-to-unit-tests/">post</a>, I described how I got code coverage up and running in Xcode 4.2. Apple have just released Xcode 4.3 and unfortunatly updating to this has broken my code coverage. The reason is that 4.3 removes the /Developer folder and moves this internally to the Xcode.app package. While this has good consequences - it should be possible to update Xcode from the App Store like a normal app - unfortunately it has also removed the libprofile_rt library from /Developer/usr/lib. I haven&#8217;t been able to find a new version of this library in Xcode 4.3. When I tried using the version from 4.2, I got &#8220;mach-o but wrong architecture&#8221; errors.</p>

<p>This means that when building my unit tests with Coverage I get link errors saying that I am missing llvm_gcda functions (llvm_gcda_start_file, llvm_gcda_increment_indirect_counter, llvm_gcda_emit_function, llvm_gcda_emit_arcs). I searched on Google to try and find a solution for 4.3 but it seemed all solutions were for 4.2 so I needed to try to solve this myself. The solution I came up with is fairly hacky. I&#8217;m hoping that as more people upgrade to 4.3, a better solution will be found and I can switch to that.</p>

<p>My solution is to take the actual file which contained the gcda functions in libprofile_rt, add it to my own source code and compile it myself. The file in question can be found on llvm.org - <a href="https://llvm.org/svn/llvm-project/llvm/trunk/runtime/libprofile/GCDAProfiling.c">here</a>. To get it to build locally I deleted the win32 and sys includes (lines 27 to 31 inclusive) and replaced the llvm include (line 23) with <code>#include "stdint.h"</code>. This builds fine using the Coverage build configuration and outputs the same gcda and gcno files as before. To make sure that this code doesn&#8217;t end up in the released project by accident, I&#8217;ve included it in the unit test bundle rather than the app bundle. This is fine for me as I only need coverage when running the tests anyway.</p>

<p><strong>Update:</strong> Some feedback from Tom Black, who emailed me to point out that libprofile_rt can be found in <code>/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/</code>
However this library did not work for either of us. Instead we got errors like
<code>The bundle “GCUtilsTests.octest” couldn’t be loaded because it is damaged or missing necessary resources.</code>
<code>Library not loaded: @executable_path ... libprofile_rt.dylib</code>
<code>Reason: image not found</code><br/>
Also this library didn&#8217;t produce .gcda files but instead generated .dia files which didn&#8217;t work in Coverflow.</p>

<p>What worked for Tom, but not for me, was not to include libprofile at all. This removed these errors and another incompatible binary error. Now however he got the following error.
<code>Detected an attempt to call a symbol in system libraries that is not present on the iPhone:
fopen$UNIX2003 called from function llvm_gcda_start_file</code>
He found the solution to this issue <a href="http://www.infinite-loop.dk/blog/2012/02/code-coverage-and-fopen-unix2003-problems/">here</a>. I still got link errors when I followed this though so I need to stick with my original solution.</p>

<p><strong>Update:</strong> Another commenter Rajiv emailed me to say that creating a new target for his project made the coverage work for him. It generated the .gcda and .gcno files when he exited using exit(0). I&#8217;ve tried creating a new simple iOS app and I don&#8217;t get any errors for this when I enable coverage.</p>

<p>One thing which might explain why it still doesn&#8217;t work for some of my projects is the type of project being built. My original project was a static library. I tried to create a new static library project and when I try to enable coverage I get the same link errors as above.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Apple's New Introduction to iOS Development]]></title>
    <link href="http://www.gerardcondon.com/blog/2012/02/18/apple-new-introduction-to-ios-development/"/>
    <updated>2012-02-18T09:44:00+00:00</updated>
    <id>http://www.gerardcondon.com/blog/2012/02/18/apple-new-introduction-to-ios-development</id>
    <content type="html"><![CDATA[<p>Apple has posted a <a href="https://developer.apple.com/library/ios/#referencelibrary/GettingStarted/RoadMapiOS/Introduction/Introduction.html">new guide</a> to iOS development which ties together all the various strands of creating an app. (via <a href="http://www.loopinsight.com/2012/02/17/apple-posts-guide-to-start-developing-ios-apps/">Loop Insight</a>). Looks really nice.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Adding Code Coverage to Unit Tests for Xcode 4.2]]></title>
    <link href="http://www.gerardcondon.com/blog/2012/02/17/adding-code-coverage-to-unit-tests/"/>
    <updated>2012-02-17T22:27:00+00:00</updated>
    <id>http://www.gerardcondon.com/blog/2012/02/17/adding-code-coverage-to-unit-tests</id>
    <content type="html"><![CDATA[<p>If you are going to the effort of having unit tests, then you really need to have code coverage. This will allow you to ensure that your tests are exercising all your code. It is really easy to spot a missing test when you see a branch of an if-else with no coverage. Code coverage for me is also a way to motivate myself to implement the tests. It&#8217;s like high scores in games - it gives me a target to aim for. Coverage gives feedback that your tests are actually doing something, and with each test you add, you can see the areas of untested code steadily decrease.</p>

<p>To set up code coverage in Xcode 4.2 I used the guide on these blogs - <a href="http://www.infinite-loop.dk/blog/2011/05/covering-it-all-up/">Infinite Loop</a> and <a href="http://mattrajca.com/post/8749868513/llvm-code-coverage-and-xcode-4">Matt Rajca</a>. Originally only the gcc compiler was supported but since then the Clang compiler has had code coverage enabled. This is important as we need to use Clang for ARC and static analysis among other things.</p>

<h3>XCode Build Settings</h3>

<p>Xcode has the concept of build configurations which can have built settings altered independently of each other. The two default configurations are Debug and Release. We want to add a new configuration named Coverage. To do this duplicate the Debug configuration.</p>

<p><img src="http://www.gerardcondon.com/images/codeCoverage/NewBuildConfig.png" title="New Build Configuration" ></p>

<p>In order to specify different settings for configurations in Xcode, hover over the left hand margin directly to the left of the setting we wish to update. An arrow will appear which when clicked will expand to an additional three lines for Debug, Coverage and Release. Editing the top line will alter the setting for all versions. Altering either of the new lines will only update the setting for that version of the build.</p>

<p><img src="http://www.gerardcondon.com/images/codeCoverage/BuildSettings.png" title="Build Settings" ></p>

<ul>
<li>Open the Build Settings tab for the main target. Under &#8220;Apple LLVM 3.0 compiler - Code Generation&#8221;, enable both

<ul>
<li>&#8220;Generate Test Coverage Files&#8221;</li>
<li> &#8220;Instrument Program Flow&#8221;</li>
</ul>
</li>
<li> We now need to add the libprofile_rt library to the build. This will link in the implementations of the coverage functions. If you are seeing link errors like &#8220;_llvm_gcda_increment_indirect_counter&#8221;, referenced from:&#8221;, then you have not done this step.<br/>
This library is located in /Developer/usr/lib. This folder contains libprofile.a which is a static library and a libprofile.dylib which is a dynamic linked library (similar to a .dll in Windows). To link this open the Build Phases tab for the main target. Expand the &#8220;Link Binary with Libraries&#8221; and click the + button. Click &#8220;Add Other&#8221; and then find libprofile_rt.dylib in the file viewer and add it. (Note that this doesn&#8217;t work for me since Xcode 4.3. I&#8217;ve documented the updates I needed to make <a href="http://www.gerardcondon.com/blog/2012/02/21/code-coverage-updates-for-xcode-4-dot-3/">here</a>).</li>
</ul>


<h3>Executing Tests</h3>

<p>Now your unit tests should run and if you examine the build output files under the DerivedData folder you should find .gcda and .gcno coverage files along with your .o files. To find this folder you can go to the Projects tab in the Organizer and select your project. The path to the Derived Data folder is listed here along with an arrow which will open the folder in the Finder.</p>

<p><img src="http://www.gerardcondon.com/images/codeCoverage/DerivedData.png" title="Derived Data" ></p>

<p>From here the path to the coverage files is Build/Intermediates/${Project Target}.build/Coverage-iphonesimulator/${Project Target}.build/Objects-normal/i386. Replace ${Project Target} with the name of your project target.</p>

<h3>Viewing Coverage Data</h3>

<p>To view the coverage data I used <a href="http://code.google.com/p/coverstory/">CoverStory</a>. Simply open the app and point it at the coverage folder. This will give a nice two pane display showing your files on the left and an editor which shows how often each line of code was hit. Now you can identify untested code and add new tests to cover them.</p>
]]></content>
  </entry>
  
</feed>
