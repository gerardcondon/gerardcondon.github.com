<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Gerard Condon's Blog]]></title>
  <link href="http://www.gerardcondon.com/atom.xml" rel="self"/>
  <link href="http://www.gerardcondon.com/"/>
  <updated>2015-05-21T00:18:45+01:00</updated>
  <id>http://www.gerardcondon.com/</id>
  <author>
    <name><![CDATA[Gerard Condon]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Mini Linx 7 Review]]></title>
    <link href="http://www.gerardcondon.com/blog/2015/05/20/mini-linx-7-review/"/>
    <updated>2015-05-20T23:58:00+01:00</updated>
    <id>http://www.gerardcondon.com/blog/2015/05/20/mini-linx-7-review</id>
    <content type="html"><![CDATA[<p>I recently bought a <a href="http://linxtablets.co.uk/linx-7.html">Linx 7</a> tablet for 70 euro. For the price it&#8217;s a great little tablet. It comes with a full version of Windows 8 and a year&#8217;s subscription to Office 365. It&#8217;s great for Youtube/videos, Twitter and internet browsing. It&#8217;s cheap enough, compared to a four or five hundred euro iPad, that I can leave the two year old watch his favourite videos on it without worrying too much. Some parts of the hardware are not up to scratch - the camera is terrible and the headphone jack has static noise - but for the price it&#8217;s fine.</p>

<p>One of the best features of the tablet compared to iOS is that it comes with a micro-SD card slot. That means that it is really easy to copy over files from my desktop. I recently tried to load up my iPad with photos and vidoes to show the in-laws. Even though the videos were shot on another iOS device, it was a nightmare to get them on the iPad - a convoluted process involving re-encoding and syncing through iTunes. On the Linx, I just copied the original files to the SD card in Windows, plugged the card in into the slot and was able to watch them immediately.</p>

<p>In fact that original iPad is really only used now as an ereader. I think the usefulness of the applications on iOS has been going down recently compared to other platforms. Quality-wise they&#8217;re absolutely fine but they&#8217;re fairly shallow compared to what they could be. The race to the bottom app-store economy and the limitations that iOS puts on inter-app communications severely limits the type of apps being written.</p>

<p>I play a good bit of chess and the apps on iOS are nowhere near the quality of those on Windows. And apparently also those on <a href="http://prodigalpawnchessbookreviews.blogspot.ie/2015/05/why-android-chess-apps-have-it-all-over.html">Android</a>. However with the Linx I can run any Windows chess app. Even Chessbase runs fine on it, which gives access to a vast library of Chessbase Fritz Trainer videos. I can open pgn files in multiple different applications and copy and paste data between them. I can use source control to version my notes. Also on Windows, developers are able to charge proper rates for their applications, thus ensuring a robust marketplace for software.</p>

<p>The problem with using Windows applications on the Linx is that the UI is really awkward to use with just your fingers. However to me, this is a small price to pay for being able to use these apps at all on a tablet. Also you can use Bluetooth mice and keyboards with the Linx so at least you have some options.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby Command Line Input Using Highline]]></title>
    <link href="http://www.gerardcondon.com/blog/2015/04/14/ruby-command-line-input-using-highline/"/>
    <updated>2015-04-14T23:24:00+01:00</updated>
    <id>http://www.gerardcondon.com/blog/2015/04/14/ruby-command-line-input-using-highline</id>
    <content type="html"><![CDATA[<p>I&#8217;ve been using Rakefiles a lot recently to automate tasks. I find it really useful in comparison to shell scripting as I can run the rakefiles under different OSes (OS X and Windows) and have it behave the same in all cases.</p>

<p>I was building a simple <a href="https://github.com/gerardcondon/pgn/blob/master/Rakefile">script</a> to automate the generation of pgn files for my chess games. I wanted to be able to enter the details of the games on the command line and then have my script output a pgn file.</p>

<p>I didn&#8217;t want to have to go messing about with low level operations such as <code>puts</code> and <code>gets</code> so I searched for something better. I found the <a href="https://github.com/JEG2/highline">Highline</a> gem for this and was really happy with it.</p>

<p>It allows for a variety of input formats</p>

<ul>
<li><p>To display a prompt to the user and then store the input in a variable use
  <code>event = ask("Event Title: ")</code></p></li>
<li><p>You can specify default values and the default will be listed as part of the prompt. On the command line simply hit enter to get the default value.
  <code>timeControl = ask("TimeControl: ") { |q| q.default = "5400+15" }</code></p></li>
<li><p>You can create a menu from an array of values using the choose function.
  <code>result = choose("1-0", "1/2-1/2", "0-1", "*")</code></p></li>
</ul>


<p>These can be customised and there are a lot more options available such as entering passwords. If you are doing text input in Ruby, I would advise checking it out.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Open Plan Offices and High Tech Architecture]]></title>
    <link href="http://www.gerardcondon.com/blog/2014/12/09/open-plan-offices/"/>
    <updated>2014-12-09T00:27:00+00:00</updated>
    <id>http://www.gerardcondon.com/blog/2014/12/09/open-plan-offices</id>
    <content type="html"><![CDATA[<p>Jeremy Paxman recently wrote an <a href="http://www.theguardian.com/commentisfree/2014/sep/12/jeremy-paxman-king-for-a-day-ban-open-plan-offices">article</a> criticising open plan offices. They have been a bugbear of mine for a while also. My working life has been spent in open offices or cubicles (never hot desking thank God) and they&#8217;re terrible compared to proper offices. Background noise, air-con issues, lack of privacy and personal space are just some of the issues.</p>

<p>Paxman&#8217;s article put me in mind of a TV series which featured a lot of open plan offices. This was the <a href="http://www.bbc.co.uk/programmes/b03vgz7r">Brits who Built the Modern World</a> series on the BBC which detailed the work of the architects such as Norman Foster and Richard Rogers, who were the pioneers of High Tech Architecture. It&#8217;s an excellent series and I highly recommend it. The buildings shown typically had a fantastic exterior with really distinctive features. I was really impressed with the level of quality and inventiveness that went into these structures.</p>

<p>However the interiors of these buildings were typically vast open office spaces. The inventiveness that characterized the outsides, had completely vanished when it came to fitting out the inside. Bog-standard, modular office furniture. was the norm. One of the best examples was Norman Foster&#8217;s <a href="http://en.wikipedia.org/wiki/Willis_Building_(Ipswich)">Willis Building</a> in Ipswich. This has a stunning exterior of dark glass panels and a rooftop garden, all combined with a soul-destroying, open plan interior.</p>

<p>The really odd thing for me was that the architects really bought into the open office ideals. They truly thought that this was the best way to design a workplace. I would have loved to have seen what they could have done, if they had put the effort in to design proper working spaces which combined private, focused space along with collaborative areas. They thought they were designing workplaces which were more efficient and collaborative, but to my mind all they succeeded in doing was creating an environment where everyone is distracted and disrupted most the time. It&#8217;s a real pity and a waste of their talents.</p>

<p><strong>PS</strong> Let&#8217;s hope no-one ever interviewing me for a job in an open plan office reads this :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Book Review: Beginning Backbone by James Sugrue]]></title>
    <link href="http://www.gerardcondon.com/blog/2014/10/02/beginning-backbone-review/"/>
    <updated>2014-10-02T22:49:00+01:00</updated>
    <id>http://www.gerardcondon.com/blog/2014/10/02/beginning-backbone-review</id>
    <content type="html"><![CDATA[<p>My current project at work is a large scale <a href="http://backbonejs.org">Backbone</a> application. The company had no prior experience in web programming before this project and was mainly used to programming in Java. So in order to staff up the project, we needed some way of converting our Java programmers into Backbone programmers.</p>

<p>To do this we looked at the various training materials available on the web. There are a number of excellent resources out there, such as Addy Osmani&#8217;s <a href="http://addyosmani.github.io/backbone-fundamentals/">book</a>, the MVC Todo <a href="http://todomvc.com/architecture-examples/backbone/">app</a> and the Backbone <a href="http://backbonejs.org">docs</a> themselves. We wanted to develop a selection of documentation/training materials that we could hand to a new member of the team to get them up to speed.</p>

<p>One of the newer books that we&#8217;ve looked at is <a href="http://www.jamessugrue.ie/softwaredev/beginning-backbone-my-first-book">Beginning Backbone</a> by James Sugrue.
<strong>Disclosure:</strong> I&#8217;ve previously worked on the same team as James for two years at my current company.</p>

<h3>JavaScript and Backbone Introduction</h3>

<p>The book begins with a good introduction and overview of Backbone from an architectural point of view and gives examples of companies who have built products on Backbone. I liked this approach, as it&#8217;s one thing explaining why you should use Backbone from a coding perspective but it&#8217;s also nice to be able to justify the choice from a risk perspective to management. Having concrete examples of successful companies helps us make that case.</p>

<p>There is a chapter on JavaScript which is probably obligatory in a book like this. It&#8217;s fine as an introduction to the language, but you would need to combine this with something specifically for JavaScript like <a href="http://eloquentjavascript.net">&#8220;Eloquent JavaScript&#8221;</a> or <a href="http://www.amazon.com/JavaScript-Good-Parts-Douglas-Crockford/dp/0596517742">&#8220;JavaScript: The Good Parts&#8221;</a>.</p>

<p>Each of the components of Backbone is dealt with comprehensively. The models, collections, views, events and router are explained with plenty of examples. Templating described alongside the views using both <a href="http://handlebarsjs.com">Handlebars</a> and <a href="http://mustache.github.io">Mustache</a>.</p>

<p>After the introduction we get a walkthrough of how to create an application. The application is surprisingly comprehensive. It&#8217;s a Twitter clone and not the standard todo app. It deals with linking models to views, reusing views,  and how to tie it together with events.</p>

<h3>Backbone EcoSystem</h3>

<p>From there the book branches out to cover the wider Backbone ecosystem. Backbone is not an all encompassing framework. In fact it quite a simple framework with a lot of scope for customisation. It is a foundation upon which you will layer many plugins and libraries, and so understanding what additional addons are available and how to use them is vital to getting the most out of Backbone.</p>

<p>The book covers</p>

<ul>
<li>UI considerations such as two way data binding using <a href="http://nytimes.github.io/backbone.stickit/">Stickit</a>, layout management using <a href="https://github.com/tbranyen/backbone.layoutmanager/wiki">LayoutManager</a> and more.</li>
<li>Model concerns such as <a href="https://github.com/fantactuka/backbone-validator">validations</a>, <a href="https://github.com/tommyh/backbone-view-model">view-models</a>, <a href="https://github.com/derickbailey/backbone.memento">undo-redo</a> and others.</li>
</ul>


<p>We had started coding well before the book was written and a lot of the choices we had made on Backbone plugins are mentioned in the book. It was nice to get some validation of those choices. In addition reading this section of the book prompted us to look at introducing view models to our code.</p>

<p>One of the problems we had was that it&#8217;s easy to see how a simple todo application can be built from Backbone, but it&#8217;s harder to extrapolate from there and design how a larger application should hang together. We encountered problems at scale e.g. managing views and their resources when having high double digit numbers of views and templates. The book introduces two plugins - <a href="http://marionettejs.com">Marionette</a> and <a href="http://thoraxjs.org">Thorax</a> - which extend Backbone to give more comprehensive view management. Even if the specific plugins described in the book are not for you, at least you will be made aware of the issues that await in the future.</p>

<p>As an aside, it is here that the book encounters one of the curses of JavaScript programming - the choice of two equally plausible alternatives! This has been the bane of my life for the past couple of years. For every situation that you come across, there will be two equally valid options. You will have to make a choice between them but you won&#8217;t have enough information at the time to understand their pros and cons. Murphy&#8217;s law dictates that of course you will pick the wrong one! You have to choose and second guess yourself for the rest of the project!</p>

<p>The specific JavaScript cases in the book are Marionette/Thorax and QUnit/Jasmine. This isn&#8217;t just limited to JavaScript. For example, in Rails you have the choice between the omakase and prime <a href="http://words.steveklabnik.com/rails-has-two-default-stacks">stacks</a>. It&#8217;s beyond the scope of the book to give definitive answers on which to choose. You need to evaluate the options based on your own situation but I think the book gives a good enough head start.</p>

<h3>Building a JavaScript application - TDD, Build Systems</h3>

<p>The book is not just about beginning Backbone programming. It is much more than that. It gives you a solid base from which to start developing JavaScript applications. Topics such as testing and automation, building, code management are dealt with.
The benefits of TDD are explained along with an introduction to two of the most popular JavaScript TDD frameworks - <a href="http://qunitjs.com">QUnit</a> and <a href="http://jasmine.github.io">Jasmine</a>.</p>

<p>The book also has a chapter on best practices &amp; design patterns. The emphasis is not just about using Backbone but using it well. It covers user visible features such as performance and memory leaks as well as development concerns such as creating and maintaining a manageable code base. For example, JavaScript modularity is not straightforward. The JavaScript language does not provide for a way for files to include other files. As a programmer you definitely want to split your codebase into separate files and then compile them together for the released product. The book uses <a href="http://requirejs.org">RequireJS</a> to show you how to do this.</p>

<h3>Negatives</h3>

<p>The formatting of the code samples is off in quite a few places. The indentation is out and there are some spaces missing turning <code>var myarray</code> into <code>varmyarray</code>. These are more than just code formatting errors - these would lead to compile errors in the code. There is a Github <a href="https://github.com/jamessugrue/beginning-backbone">repository</a> of the code samples in the book though, which partially makes up for this.</p>

<p>From a personal perspective, I don&#8217;t like the <a href="http://gruntjs.com">Grunt</a> approach to build management so I wasn&#8217;t too keen on the whole chapter devoted to this. We tried Grunt on our project at work and found that as as the number of build steps increases, the json required to configure Grunt becomes more and more complex. I prefer using code over configuration files as then I have a chance to debug the build process, insert print statements etc. I think there must be better tools out there. Stepping away from JavaScript and using Ruby, there is <a href="https://rubygems.org/gems/rake">Rake</a>, which is what we use on our project. If you are using Rails then you have the Asset Pipeline approach. I found that Grunt was hard to debug and it was not easy to figure out what went wrong for some step in the middle.</p>

<h3>Summary</h3>

<p>Overall I would recommend this book. I think its invaluable for ramping up new developers to a Backbone project.  Also from an experienced programmer&#8217;s perspective, it is an easy and quick way to gain a broad understanding of the Backbone landscape. It introduces a number of topics, not just Backbone, but also JavaScript development in general. The book promotes a professional and structured approach to software development, making it suitable for a team who are beginning web development and want to get their process set up correctly.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Working With Typescript]]></title>
    <link href="http://www.gerardcondon.com/blog/2014/09/19/working-with-typescript/"/>
    <updated>2014-09-19T01:24:00+01:00</updated>
    <id>http://www.gerardcondon.com/blog/2014/09/19/working-with-typescript</id>
    <content type="html"><![CDATA[<p>For the past year and a half, my team at work have been using <a href="http://www.typescriptlang.com">TypeScript</a> to implement a large single page application in <a href="http://www.backbonejs.org">Backbone</a>. We&#8217;re over three quarters of the way through the project, closing in our our first release and here are my thoughts on using TypeScript to date.</p>

<p>This is my first major foray into web development, so it also required ramping up on HTML, CSS and REST. Previously I had used JavaScript to implement the client side of a websocket API, but that project was non-GUI work.</p>

<h2>Reasons for choosing TypeScript</h2>

<p>The company has settled on TypeScript for web programming due to a number of factors.</p>

<ul>
<li><p>Firstly is the additional security/peace of mind provided by type checking. For example, this prevents a lot of mistakes in calling functions with the wrong parameters. It makes some refactorings easier, as the compiler can tell you when you&#8217;re calling functions that no longer exist or are passing the wrong types to a function.</p></li>
<li><p>TypeScript adds classical Object-Oriented constructs to JavaScript e.g. interfaces, classes with inheritance. Rather than having to chose a library to implement inheritance, it is instead a first class language feature. I find this, along with having a proper super keyword to be much more usable in practice than prototypical inheritance.</p>

<p>A nice feature is that TypeScript has support for implicit interfaces. The compiler will figure out if a class implements an interface rather than requiring that the class declares a list of implements X clauses in its definition. This reduces the friction of dealing with the type system.</p></li>
<li><p>TypeScript is compatible with JavaScript so any library out there can be used with our code with no problems.</p></li>
<li><p>Better tooling. The idea behind this was that, given that TypeScript has a proper type system, this would allow better tooling such as Intellisense. The theory was that programming in TypeScript would be a better experience because the IDE would be better.</p>

<p>As an aside, I would question the value of Intellisense and the type of code it leads to. Take Java for example. When you combine Intellisense with modern IDEs&#8217; ability to automatically import files, you greatly lower the barrier to coupling. It is no problem to include remote files, grab the inevitable Singleton instance, and execute large Law of Demeter busting method chains on them.</p>

<pre><code>  GlobalSingletonReference.getInstance().getSomethingElse().andItsChild()
      .lawOfWhatExactlyNow().pleaseStopSoon().noTheresMore().invoke()
</code></pre>

<p>I think Java tools have given the ability to create larger programs than can be properly maintained.</p></li>
</ul>


<p>These features were seen as key to creating a more maintainable source code base especially at large scale.</p>

<h2>My Experience with TypeScript</h2>

<p>We had written a JavaScript prototype in Backbone and we ported that to TypeScript, so that we could compare and see how it went. I tried to use TypeScript as much as possible to be fair to the experiment. You can get away with basically writing JavaScript and passing it through the TypeScript compiler but that&#8217;s no good to anyone really.</p>

<p>I found it made my code look more like Java or C#. This was especially the case with class definitions. Defining a class hierarchy in JavaScript is terrible - needing to set the prototype to the parent&#8217;s prototype, manually defining super etc. The TypeScript version is very familiar to a Java or C# coder. Our group of TypeScript programmers were converted Java/C++ programmers so this was a huge bonus.</p>

<p>Having interfaces was great. They&#8217;re very useful in defining APIs and especially so for documenting external APIs. One thing I hate about JavaScript, is having to read documentation or readme files for third party libraries in order to find out their API. An interface definition in the language itself is far superior, as it is a lot more concise and guaranteed to be correct, having gone through the compiler.</p>

<p>In the end, the code had the same classes with the same class names but the class implementations were far more readable due to the OO nature of TypeScript and the ability to define and program to interfaces.</p>

<p>I did find that refactoring was easier - operations like adding additional parameters to functions were trivial compared to JavaScript. For the JavaScript code, I had to rely on my unit tests to assure me that my refactorings were correct but here I could offload a lot of those tests to the compiler.</p>

<p>When we started on TypeScript it was version 0.8. The compiler was a bit rough then and crashed on some invalid input rather than reporting errors. It has been steadily improved since then and version 1.0 is perfectly fine for us, reporting the correct errors for all the previously crashing cases. Also the language has been added to and improved over time.</p>

<h2>Things I didn&#8217;t like about TypeScript</h2>

<p>On the flip side there are a lot of things that I don&#8217;t really like about TypeScript.
Some features of JavaScript e.g. different return types, can&#8217;t be represented in TypeScript. In these circumstances you find yourself using the &#8220;any&#8221; type - the equivalent of using Object in Java. The problem with this is that using it completely circumvents the type checker. Thus the more complex code ends up being the code with less type checking.</p>

<p>Other JavaScript features such as mixins have such horrible syntax in TypeScript (see <a href="https://typescript.codeplex.com/wikipage?title=Mixins%20in%20TypeScript">here</a>) that they&#8217;re basically unusable. Mixins in particular require repeated boilerplate code to get past the compiler. That was a pattern with a lot of the issues I had with TypeScript. As you try to do the more dynamic JavaScript stuff, you end up writing and repeating declarations to get the compiler off your back. Ideally there would be some way to say to the TypeScript compiler that we are going to implement this interface dynamically - the implementation may not be here now but it will be at runtime. We ended up generating a lot of this boilerplate code using Ruby and Erb (a topic for another blog post).</p>

<p>I tried debugging with source maps in Chrome but I wasn&#8217;t a fan of the experience. Breakpoints would always get shifted a few lines and it was hard to get them to break on a function. I was constantly wondering if I had the correct version rather than a cached sourcemap and did the TypeScript match up to the JavaScript. I ended up just using the compiled JavaScript for debugging.</p>

<p>Continuing with the last point, with some TypeScript features, you need to know what type of code was generated e.g. did a variable assignment get generated in the constructor or on the prototype. For example, this is necessary when integrating with Backbone. Instance variables in TypeScript are not defined on the prototype but instead in the constructor after the call to super. This means that they are not defined by the time the Backbone constructor is called. The Microsoft <a href="https://github.com/Microsoft/TypeScriptSamples/blob/master/todomvc/js/todos.ts">solution</a> is to put the call to super in the middle of the constructor but this looks wrong to any Java programmer and I could see them inadvertently breaking the code by moving super to the top of the constructor.</p>

<p>TypeScript&#8217;s support for Generics was almost good but again there are some issues. The main one I ran into is that you can&#8217;t create a new instance of the generic type e.g. for a generic type T you can&#8217;t do <code>var x = new T()</code>. There are ways around this by passing in functions that create objects but the code they lead to is fairly bad.</p>

<p>The idea that types would lead to better tooling didn&#8217;t pan out for us. Taking IDEs first, I think the main tool that supports TypeScript is <a href="http://msdn.microsoft.com/en-us/vstudio/aa718325.aspx">Visual Studio</a>. There is also JetBrains&#8217; <a href="http://www.jetbrains.com/webstorm/">WebStorm</a>. As IDEs go these seem perfectly fine. It&#8217;s a bit hard for me to evaluate this as I&#8217;m not a fan of large IDEs. One issue with these is that, especially in the case of Visual Studio, they require large license fees. I don&#8217;t like criticising tools on cost issues, as I feel that companies should treat these as a required cost of hiring programmers. Unfortunately, a lot of companies don&#8217;t, so if I&#8217;m required to buy a personal license, I much prefer to buy a license for a tool like <a href="http://www.sublimetext.com">Sublime Text</a>.</p>

<p>TypeScript files import other files by means of a reference path at the top of the file. This is almost like Java except unfortunately the compiler does not enforce these, thus requiring them to be manually maintained. This is impossible to get right for a large project. The only essential ones are those for your base classes but if you leave out the others then IDEs have problems locating type declarations. If you have extraneous references that are not technically needed then this can lead to the TypeScript compiler generating invalid code that defines subclasses before their parent classes. When run, these cause runtime exceptions. Not a great situation.</p>

<p>There aren&#8217;t a great number of TypeScript plugins for Sublime Text and there is no official one from Microsoft. Also there are no code quality tools such as linters. It&#8217;s not much use running the JavaScript versions as the only thing they can run on is the compiled code. The set of tools available for JavaScript is much larger and more mature. Even where you would think that having types would allow for newer tools e.g. static analysis or dependency graph generators, there is nothing.</p>

<p>From a language point of view I wonder if trying to make all valid JavaScript code be valid TypeScript code is harming them? Would they be better going for a more C# like language and mandating that any JavaScript should be in separate files? That&#8217;s what we ended up doing anyway - we didn&#8217;t want to mix our JavaScript and TypeScript codebase.</p>

<h3>Integration with Third Party Code.</h3>

<p>In order to use external JavaScript files in TypeScript, you must first create a definition file for the JavaScript API. This declares, in a manner similar to Java interfaces, the functions, classes and interfaces that the JavaScript code exposes. These files can be a pain to locate and maintain. There is a Github repository <a href="https://github.com/borisyankov/DefinitelyTyped">Definitely Typed</a> which maintains a collection of .d.ts files for popular JavaScript libraries. These are typically of a high standard but we have had to add missing functions to some Backbone .d.ts files. If there is none online you have to write one yourself which can involve reverse engineering the API and types of the library.</p>

<p>I think there is a large risk in using these, given that they are neither maintained by the library owners in question or by Microsoft themselves. It is problematic to update the libraries as now you have to also update the .d.ts. files. Everything going well, the Definitely Typed version will be updated to the latest version but there are no guarantees. What happens if the maintainer of this repository gets fed up and stops updating the files?</p>

<p>However once they are found, these .d.ts files can be extremely useful. When working with websockets, the TypeScript lib.d.ts file was the best documentation I found on the subject. I think the interface/protocol concept is a great addition to any programming language. It is especially useful for documenting APIs and it harms Ruby and JavaScript not to have such a construct.</p>

<p>It can be a bit tricky to integrate your TypeScript code with existing JavaScript libraries. As outlined above with Backbone, some libraries need to have code that&#8217;s on the prototype so you need to know the code that TypeScript generates. Also where in the hierarchy does the library go? We found it best to have the JavaScript classes at the top of the inheritance tree and TypeScript in the subclasses.</p>

<h2>Conclusions</h2>

<p>One issue I&#8217;d have with TypeScript is trying to gauge Microsoft&#8217;s commitment to the language. Are they really in this for the long term? For example, the code samples on their website haven&#8217;t been updated in ages. Also how large can the TypeScript community get? Are there really going to be a critical mass of developers abandoning JavaScript for this - especially considering Microsoft&#8217;s past attitude to the web and Internet Explorer. The amount of bridges they must have burned is quite large at this stage. If I&#8217;d suffered for years working around IE6&#8217;s issues, the last thing I&#8217;d do is switch to Microsoft&#8217;s new web language.</p>

<p>Overall though, I think it was worthwhile for the company to use TypeScript. The pros outweigh the cons, especially once you identify the issues with TypeScript and develop coding standards to avoid them. As a developer I would have preferred CoffeeScript as a JavaScript replacement but I can see how it would be easier to shift Java developers over to TypeScript. I think its given them a lot of security that they wouldn&#8217;t have had with JavaScript.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Automating Jasmine Unit Tests]]></title>
    <link href="http://www.gerardcondon.com/blog/2013/07/10/automating-javascript-jasmine-unit-tests/"/>
    <updated>2013-07-10T23:48:00+01:00</updated>
    <id>http://www.gerardcondon.com/blog/2013/07/10/automating-javascript-jasmine-unit-tests</id>
    <content type="html"><![CDATA[<p>For the first cut at automating my JavaScript unit testing, I started running them from the command line via <a href="http://phantomjs.org/">PhantomJS</a>. PhantomJS is a headless browser so it will render my HTML &amp; CSS and execute the JavaScript, but will not display it on the screen. The steps I followed were:</p>

<ul>
<li><p>I installed phantomjs from <a href="http://phantomjs.org/download.html">here</a> using homebrew <code>brew install phantomjs</code>.</p></li>
<li><p>I got the command for running Phantom.js <a href="http://kilon.org/blog/2013/01/running-jasmine-tests-with-phantomjs/">here</a>.</p></li>
<li><p>I found the default output from Phantom.js to be lacking in detail. I came across a good link <a href="http://blog.jphpsf.com/2012/10/31/running-Jasmine-tests-with-Phantom-js-or-Webdriver">here</a> which shows how to add stack traces on failure and how to add colours to the output using a console reporter.</p></li>
</ul>


<p>In future, I&#8217;d like to add this to a build system which will run jshint on my code and also do whatever minfication/optimizations are needed. It&#8217;s looking like <a href="http://gruntjs.com/">Grunt</a> is a good tool for this so will investigate that further.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Design of iCloud]]></title>
    <link href="http://www.gerardcondon.com/blog/2013/06/04/the-design-of-icloud/"/>
    <updated>2013-06-04T22:35:00+01:00</updated>
    <id>http://www.gerardcondon.com/blog/2013/06/04/the-design-of-icloud</id>
    <content type="html"><![CDATA[<p>There&#8217;s been a lot of blog posts from developers recently about the problems with iCloud syncing. The Verge has a great summary <a href="http://www.theverge.com/2013/3/26/4148628/why-doesnt-icloud-just-work">here</a>. There are quite a few who are removing iCloud from their products and going with other syncing options such as Dropbox.</p>

<p>The impression I get from these discussions is that it&#8217;s the reliability of iCloud that&#8217;s the problem, i.e. if iCloud was rock solid then it would be a great option for your app. I disagree with this view and I think the design of iCloud is fundamentally flawed.</p>

<p>I think that even if iCloud Database syncing was perfectly reliable, it would still be a bad way of syncing data. One conclusion I&#8217;ve drawn from looking at web backends and Rails in particular, is that iCloud is only useful if you want to stick to Apple devices. There is no way to get at this data outside of iOS or OS X. In particular it is impossible to access this from a web application. For this reason, I think it&#8217;s vital to have a proper backend if you are storing data in the cloud.</p>

<p>The other mode of iCloud syncing is the Document based syncing. The issue I have with this is that anything stored in iCloud is restricted to the application that created it. This is a major issue when an application stores data in a common file format (e.g. plain text or image formats such as PNG or JPEG) that you may expect to be able to use in another application. Dropbox is a far superior solution in this case. I feel much more confident in the apps which use this over iCloud, as I will always have access to the data files.</p>

<p>The other day, Brent Simmons <a href="http://inessential.com/2013/05/07/30_minutes_to_sync">posted</a> a great proposal for an Apple backend service. They really need to do something here as their competitors aren&#8217;t standing still. Microsoft is on the right track here with Azure and similarly Amazon&#8217;s cloud computing services are going from strength to strength. It will be interesting to see if anything will be announced for iCloud at WWDC.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Test Driven Design in practice]]></title>
    <link href="http://www.gerardcondon.com/blog/2013/05/22/test-driven-design-in-practice/"/>
    <updated>2013-05-22T21:35:00+01:00</updated>
    <id>http://www.gerardcondon.com/blog/2013/05/22/test-driven-design-in-practice</id>
    <content type="html"><![CDATA[<p>I recently tried implementing a JavaScript project at work using the testing methods I&#8217;ve learned from the <a href="http://www.destroyallsoftware.com">Destroy All Software</a> Screencast. It ended up being some of the best code I&#8217;ve written. The interfaces grew neatly, it wasn&#8217;t not over designed and it was completely covered by tests. It&#8217;s the project that I have the most confidence in its correctnesss. It&#8217;s nice to know that despite any modifications in future, as long as all the tests pass it will pretty much always work first time.</p>

<p>Anywhere I&#8217;ve worked up to now, testing was always seen as something that you implemented after the fact. Code coverage was the main driver of the testing. However this approach completely misses the input that TDD has on the design of the application. By writing applications so that they can be tested easily, they turn out to be much better designed. They are less coupled and all the dependencies are visible. Having the design emerge from the growing system is better than imposing over elaborate architecture and patterns top down.</p>

<p>I found a couple of good resources recently on testing and the impact it has on your code. This is a good <a href="http://vimeo.com/15007792">talk</a> by Michael Feathers on the synergy between testing and design. He shows how testing problems are indicative of design problems. Misko Hevery&#8217;s <a href="http://misko.hevery.com">site</a> has some great presentations and resources on how to design code that is testable.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learning JavaScript]]></title>
    <link href="http://www.gerardcondon.com/blog/2013/05/05/learning-javascript/"/>
    <updated>2013-05-05T22:52:00+01:00</updated>
    <id>http://www.gerardcondon.com/blog/2013/05/05/learning-javascript</id>
    <content type="html"><![CDATA[<p>Last year, the project I was working on at work switched languages for its UI code from C++ to HTML and JavaScript. For me, this meant learning JavaScript and web development.</p>

<p>When I was in college, we studied Java as the &#8220;proper&#8221; programming language and barely covered JavaScript - only as part of a HTML course. Back then, I never really saw it as anything more than a language for adding simple dynamic features to a web page. However ten years later, and (hopefully!) knowing a great deal more about programming, my opinions have changed. Now, I have a whole new respect for JavaScript, based on features that I wouldn&#8217;t have been able to really comprehend back then.</p>

<p>I love the power that first class functions and closures give you. It&#8217;s spoiled me as a programmer as I&#8217;m finding it hard going back to languages without those features! I know that they are coming, or have recently come, to Java and C++. However given the nature of exising legacy codebases in those languages and that projects may be restricted to earlier compilers, it&#8217;ll be a while before they&#8217;re mainstream.</p>

<p>There are no shortage of in-depth JavaScript books and tutorials which teach all the features of the language. However learning JavaScript syntax and features is not the problem. The real issue is knowing what features to avoid. Unfortunately it&#8217;s incredibly easy to write unmaintainable code in JavaScript if you&#8217;re not careful. Luckily there are some very good books written on this topic. The ones I recommend are:</p>

<ul>
<li>Douglas Crockford&#8217;s <a href="http://www.amazon.com/JavaScript-Good-Parts-Douglas-Crockford/dp/0596517742">JavaScript: The Good Parts</a>. This is an really good compact book. It allows you to limit yourself to the features of JavaScript which support good software development practices.</li>
<li>Nicholas Zakas&#8217;s <a href="http://www.amazon.com/Maintainable-JavaScript-Nicholas-C-Zakas/dp/1449327680">Maintainable JavaScript</a>. Again this book is more than a simple explanation of JavaScript syntax. It&#8217;s topics include JavaScript programming practices and build automation. The build process part is especially useful for learning the proper process for building, linting and testing JavaScript code.</li>
<li>Marijn Haverbeke&#8217;s <a href="http://eloquentjavascript.net">Eloquent JavaScript</a>. This is available for free on the website. The really cool part about the site is that all the JavaScript code snippets are interactive and can be run on the page while you are reading them.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Irish Rail's RealTime API]]></title>
    <link href="http://www.gerardcondon.com/blog/2013/04/23/irish-rail-realtime-api/"/>
    <updated>2013-04-23T23:03:00+01:00</updated>
    <id>http://www.gerardcondon.com/blog/2013/04/23/irish-rail-realtime-api</id>
    <content type="html"><![CDATA[<p>I spent a lot of time in my childhood and early twenties traveling on the Irish Rail Network. Mostly this seemed to involve waiting for ages at Limerick Junction or barely finding a space to stand on a packed train from Dublin. Those experiences didn&#8217;t exactly leave me with a great impression of <a href="http://www.irishrail.ie">Iarnród Éireann</a>.</p>

<p>Given this, I was amazed to find out recently, that Iarnród Éireann have an <a href="http://api.irishrail.ie/realtime/index.htm">XML API</a> for accessing realtime data about the trains running on their network. Credit where credit is due, this is an excellent idea and I wish more companies would implement something similar.</p>

<p>The API provides functionality for getting a list of the stations and what trains are due at those stations in the next ninety minutes. It also gives a list of all trains active on the network. It can filter by DART, Suburban or Mainline trains (that leaves some trains in an &#8216;other&#8217; category - I&#8217;m not too sure what these actually are).</p>

<p>I used this API as part of a Backbone learning <a href="http://www.gerardcondon.com/projects/irishrail/index.html">project</a>. It was quite fun to do. The API returns latitude and longitude coordinates for each station and train, allowing them to be plotted on a Google Map widget. I never realised there were so many stations in Ireland until I saw them plotted on the map.</p>

<p>One issue I ran into was testing the application with live data. Given that I was programming this at night after work, you&#8217;d soon reach a time when there are very few trains left on the network!</p>

<p>One technical detail about the API is that it is in XML rather than JSON. This means that I can&#8217;t use Ajax or JSONP to get the data, due to the same origin policy. Instead I had to bounce the results through <a href="http://developer.yahoo.com/yql/">YQL</a>. YQL exposes a SQL like interface to web data. I&#8217;m only using a basic &#8216;select all&#8217; query here but looking at their site you can do lots of cool and complex stuff. I found a good <a href="http://www.cypressnorth.com/blog/programming/cross-domain-ajax-request-with-xml-response-for-iefirefoxchrome-safari-jquery/">tutorial</a> from Cypress North on how to use YQL in your code to consume an XML API.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Uncle Bob's "Architecture The Lost Years" Talk]]></title>
    <link href="http://www.gerardcondon.com/blog/2013/04/17/uncle-bobs-architecture-talk/"/>
    <updated>2013-04-17T22:46:00+01:00</updated>
    <id>http://www.gerardcondon.com/blog/2013/04/17/uncle-bobs-architecture-talk</id>
    <content type="html"><![CDATA[<p>I found this <a href="http://confreaks.com/videos/759-rubymidwest2011-keynote-architecture-the-lost-years">talk</a> by Uncle Bob Martin to be really enjoyable and thought provoking. In it he talks about decoupling your application from the database and the web. It&#8217;s ostensibly a Rails talk but I think it applies to every language.</p>

<p>It really crystalized the issues I&#8217;ve been having with developing Objective-C applications i.e. the intermixing of the database (specifically Core Data) and UI code. After viewing this, I was able to come to iOS development with a whole new perspective. It&#8217;s so much clearer to me now how to architect applications, where code belongs and what interfaces are needed. After completely separating Core Data and UI code, the whole application has gotten a lot simpler and is much easier to unit test.</p>

<p>It also introduced me to Alistair Cockburn&#8217;s <a href="http://alistair.cockburn.us/Hexagonal+architecture">Hexagonal Architecture</a>. This is a really nice architecture for isolating the application from external entities such as the GUI or database. I&#8217;ve seen this crop up more and more on various Rails blogs under the term &#8216;Hexagonal Rails&#8217;.</p>

<p>As a reference, <a href="http://blog.8thlight.com/uncle-bob/2011/11/22/Clean-Architecture.html">here</a> and <a href="http://blog.8thlight.com/uncle-bob/2012/08/13/the-clean-architecture.html">here</a> are a couple of other links from Bob Martin&#8217;s blog talking about &#8220;clean architecture&#8221;.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Side Project: Irish Rail Tracker]]></title>
    <link href="http://www.gerardcondon.com/blog/2013/03/18/side-project-irish-rail-tracker/"/>
    <updated>2013-03-18T10:56:00+00:00</updated>
    <id>http://www.gerardcondon.com/blog/2013/03/18/side-project-irish-rail-tracker</id>
    <content type="html"><![CDATA[<p>I&#8217;ve been working on a <a href="http://www.gerardcondon.com/projects/irishrail/index.html">side project</a> for the last month in order to learn about front-end web development. While not complete by any means, I think it&#8217;s good enough to release as a beta. I plan to add features, improve the UI and refactor the code in future.</p>

<p>The motivation behind it was that I wanted to do a project using one of the JavaScript <a href="http://addyosmani.github.com/todomvc/">MVC Frameworks</a> - for this one I chose <a href="http://backbonejs.org">Backbone</a>. Also I&#8217;ll be working more with HTML and CSS in work over the coming year and I need to ramp up on these.</p>

<p><a href="http://www.irishrail.ie">Iarnród Éireann</a> (the Irish Rail company) has a REST API which provides details of the stations in its network and the current status of its trains. My <a href="http://www.gerardcondon.com/projects/irishrail/index.html">webpage</a> plots these stations and trains on a Google Map and shows upcoming train information for each station.</p>

<p>I plan to write a series of posts on how I implemented this and the lessons I learned along the way.</p>

<p>The project is available <a href="http://www.gerardcondon.com/projects/irishrail/index.html">here</a> and the code is available on <a href="https://github.com/gerardcondon/Irish-Rail-Tracker">Github</a> under the MIT licence. The roadmap.md document is where I&#8217;m tracking future work that needs to be done on the project. Any feedback would be much appreciated.</p>

<p>As far as the code goes:</p>

<ul>
<li>I&#8217;m happy enough with the Backbone model and collection code. The Backbone view code still needs some refactoring to remove duplication and use proper Backbone idioms.</li>
<li>There are some JavaScript <a href="http://pivotal.github.com/jasmine/">Jasmine</a> tests - mostly for the model. I&#8217;m still figuring out the best way to test the UI - I have some Jasmine tests but also some Ruby <a href="https://github.com/jnicklas/capybara">Capybara</a> tests for the browser.</li>
<li>The HTML and CSS code are functional rather than elegant. I&#8217;m hoping to improve these as time goes by and as I get more experience with these languages.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Controllers in Objective C]]></title>
    <link href="http://www.gerardcondon.com/blog/2013/03/17/controllers-in-objective-c/"/>
    <updated>2013-03-17T13:52:00+00:00</updated>
    <id>http://www.gerardcondon.com/blog/2013/03/17/controllers-in-objective-c</id>
    <content type="html"><![CDATA[<p>One of the things to learn about iOS is the MVC model. The Cocoa implementation of MVC has some <a href="http://developer.apple.com/library/ios/documentation/general/conceptual/CocoaEncyclopedia/Model-View-Controller/Model-View-Controller.html#//apple_ref/doc/uid/TP40010810-CH14-SW9">differences</a> compared to the traditional approach. For example, in Cocoa, views are not aware of the models and don&#8217;t listen for model updates. Instead the all events pass through the controller, i.e. it listens for model changes and then tells the view to update itself.</p>

<p>In <a href="http://rubyonrails.org/">Rails</a>, the constant refrain is that controllers should be thin. However on iOS they seem to be absolutely huge. One joke that I saw on Twitter was that on iOS, MVC stood for Massive View Controller. For example, the Recipe sample application from Apple has controllers with hundreds of lines of code with one topping out at 600 LOC.</p>

<p>One of my issues with these view controllers is that they don&#8217;t follow the Single Responsibility Principle, but instead combine multiple functions. They act as delegates for multiple protocols e.g. table data source, fetched results controller delegate etc. I find it hard to distinguish the separate elements of MVC when one class is doing everything. Also in Objective C, once everything is in the same file, it&#8217;s not obvious to which protocol an item belongs. I think this risks breaking the MVC boundaries. For example, during a refactor, if you&#8217;re not careful, you can easily get model variables depending on controller variables and vice-versa.</p>

<p>I&#8217;d much prefer it if these controllers were split out into lots of different classes, each with a single job as per the SRP. This would lead to a more composition-based rather than inheritance-based codebase. I also think that this greatly helps with code navigation. Jumping to a small, focused file has the effect of filtering out irrelevant code. I&#8217;ve started using Sublime Text recently and it has great functionality for navigating between files, so I prefer having lots of smaller files rather than a few large monolithic classes.</p>

<p>(On a side note this is one thing that really annoys me about XCode. Given a properly nested folder structure with well named files, I think it becomes a lot easier to find your way around the app. For example even after only a few weeks learning Rails, I know exactly where to look to find the controllers, models, db code etc. But XCode is a disaster here. It doesn&#8217;t push the groupings made in the app on to the file system underneath. It requires duplicate effort of organising the code both inside and outside the application to keep the codebase properly organised.)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Destroy All Software Screencasts]]></title>
    <link href="http://www.gerardcondon.com/blog/2013/02/27/destroy-all-software-screencasts/"/>
    <updated>2013-02-27T23:14:00+00:00</updated>
    <id>http://www.gerardcondon.com/blog/2013/02/27/destroy-all-software-screencasts</id>
    <content type="html"><![CDATA[<p>I recently subscribed to Gary Bernhardt&#8217;s <a href="https://www.destroyallsoftware.com/screencasts">Destroy All Software</a> screencasts. I found these absolutely fantastic. There are only about ten to fifteen minutes each in length so it&#8217;s no hassle to find the time to watch them. However they cover a lot in the short time.</p>

<p>They are mostly Ruby and in particular Rails focused but the topics are applicable to any software programming. For example, I&#8217;ve really learned a great deal about TDD from watching this.</p>

<p>The Github <a href="https://github.com/garybernhardt/destroy-all-software-extras">archive</a> is useful, especially the <a href="https://github.com/garybernhardt/sucks-rocks">Suck/Rocks</a> Rails app. His <a href="https://github.com/garybernhardt/dotfiles">Git</a> config file is also really handy and I really like his log formatting. I would have liked to see him post a larger sample Rails app to Github (or for the ultimate in wishful thinking - the code for the Destroy All Software site). It would expand upon how his ideas work when confronted with the complexity and messiness of a real world system.</p>

<p>Overall I highly recommend the series for any programmer regardless of what language you are using. Unfortunately I believe he&#8217;s stopping soon but you get access to the entire back catalog with a subscription and they&#8217;re well worth it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Year Update and Reflections]]></title>
    <link href="http://www.gerardcondon.com/blog/2013/02/23/year-update-and-reflections/"/>
    <updated>2013-02-23T21:52:00+00:00</updated>
    <id>http://www.gerardcondon.com/blog/2013/02/23/year-update-and-reflections</id>
    <content type="html"><![CDATA[<p>It&#8217;s been a year, give or take, since I started looking into iOS development, and I wanted to write a post to reflect on where I am and what are the next steps.</p>

<h2>Progress on iOS to Date</h2>

<ul>
<li><p>I spent the first three months of the year learning Objective C and hacking on some small programs.</p></li>
<li><p>I spent some time experimenting with Core Data and MVC and trying to get an automated testing system up and running.</p></li>
<li><p>The summer months were quiet due to work commitments. The project I was working on switched to JavaScript which I hadn&#8217;t really used before. Due to this, I spent a lot of time learning JavaScript and web frontend and backend development.</p></li>
<li><p>After the summer I came back to the app with a better understanding of MVC as implemented in iOS and Core Data and I started working on it again. I read up on TDD and started implemented tests using Cucumber and Calabash. That took me up to about October.</p></li>
<li><p>Work has stalled on it since then due to a combination of real life commitments from both family life and work. And also Skyrim! Curse you Skyrim and the hours I sank into it :)</p></li>
</ul>


<h2>Current Status</h2>

<p>Here&#8217;s where I am currently</p>

<ul>
<li><p>App work: I didn&#8217;t get as much done as I had planned at the start of last year. I got diverted in other areas, namely:</p></li>
<li><p>Testing - TDD &amp; BDD: I hadn&#8217;t planned to look at any of this but ended up spending a lot of time here and learning a great deal. Familiarizing myself with this way of programming was probably the biggest benefit I gained from the last years experimentation. I probably could have completed the app if I didn&#8217;t spend so much time on TDD and tinkering with automated testing setups on Jenkins. However I wouldn&#8217;t have learned anywhere near as much about proper programming techniques if I did.</p></li>
<li><p>JavaScript: I spent a good deal of time learning proper JavaScript development. The basic syntax is very similar to Java which I already knew. However I wanted to learn how to program using JavaScript correctly i.e. modular code using RequireJS, TDD using Jasmine etc.</p></li>
<li><p>Ruby and Rails: again I had not planned on researching any of this but I got interested in it while looking at JavaScript. Have done a few tutorials and would like to write a Rails app at some stage.</p></li>
</ul>


<p>I spent a lot of time over the last year becoming proficient in web app and backend development in JavaScript for a work project. I&#8217;ve been really enjoying this. My only previous experience of JavaScript and web development was back in college around 2000 and I wasn&#8217;t too taken with it compared to Java and C development. But looking at it now and in combination with backends like Rails, I&#8217;ve been really impressed. I&#8217;m kind of kicking myself for tuning out on what was happening in web development over the past decade. I plan to branch out and do some posts on what I used to ramp up on this.</p>

<p>On the iOS front I feel that I have a good knowledge of Objective C. However the issue is finding time to finish the app. Any time I was able to set aside a sizable chunk of time I got a lot done but getting that time is the key.</p>

<h2>Reflections</h2>

<p>I think working on this side project has made me expand my horizons more as a developer. I couldn&#8217;t have predicted the areas that I would have become interested in at the start of last year. I don&#8217;t think it&#8217;s a coincidence that as I&#8217;ve started looking at more stuff outside of work, that my work projects have become more interesting. I feel like I&#8217;m able to bring so much more to a project now especially in the areas of TDD and design.</p>

<p>Admittedly I haven&#8217;t pursued the iOS work 100%, but I feel that the other languages I&#8217;ve been exposed to compensate for that. I think it was better to start out with iOS and then divert into other topics rather than not do any side work at all.</p>

<p>However at the end of the day the reality is that I haven&#8217;t shipped anything on iOS yet. I&#8217;ve been justifying this to myself by claiming all these other intangible benefits. Given what I&#8217;ve learned, I don&#8217;t think that I&#8217;ve wasted my time but still I&#8217;d like to get some iOS project finished. Unfortunately given my current life and work commitments I probably won&#8217;t have time to work on it over the next three months. In the meantime, I&#8217;ll post about my JavaScript and TDD experiences.</p>

<p>As regards the blog, looking back I am happy enough with what was posted in the past year. The main thing I&#8217;m not happy with is the regularity of the postings. The same things that have stopped me doing much software work, have also stopped me publishing much. In future I want to maintain a more regular posting rate. I aim to post at least once a fortnight and hopefully once a week.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Stanford iOS Course Companion Book]]></title>
    <link href="http://www.gerardcondon.com/blog/2013/01/28/stanford-ios-course-companion-book/"/>
    <updated>2013-01-28T23:27:00+00:00</updated>
    <id>http://www.gerardcondon.com/blog/2013/01/28/stanford-ios-course-companion-book</id>
    <content type="html"><![CDATA[<p>I previously <a href="http://www.gerardcondon.com/blog/2012/01/29/itunes-u-and-online-learning/">recommended</a> the Stanford iOS course and they now have a companion <a href="http://editorscut.com/Books/003ipadiphone/003ipadiphone-details.html">book</a> available for the iPad through iBooks.</p>

<p>The content of this book is excellent and it really complements the course videos. I really like the code samples and how they are displayed dynamically on the iPad. They have really used the iBooks format well for these. Additionally all the code is available on <a href="https://github.com/editorscut/ec003-ipad-and-iphone-app-development">Github</a>.</p>

<p>I highly recommend the book and I wish it was available when I originally watched the videos. Given the quality of the lectures and the book, Stanford could easily charge for this stuff - it was certainly equal to any introductory programming course I&#8217;ve attended at college. It seems inconceivable to me that this approach won&#8217;t form the basis of education in the years to come.</p>

<p>It&#8217;s maybe a bit churlish to criticise a free book but still I do have some issues. These concern the format the book was released in and not its content.</p>

<ul>
<li><p>Firstly it was only released for iPad and not for iPhone. I would have liked to have had a reference version for iPhone.</p></li>
<li><p>Also I don&#8217;t like the iBooks lock in. I really want to have this on my Macbook and/or Kindle to have open when programming. Here&#8217;s where an epub or pdf version would be a lot better. The <a href="http://pragprog.com">Pragmatic Programmers</a> company have shown the way forward with their ebook releases, giving multiple DRM free versions of their books.</p></li>
</ul>


<p>Apart from those minor nits though, this is an essential resource for learning iOS.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Managing Sub-Modules with Git Subtree]]></title>
    <link href="http://www.gerardcondon.com/blog/2012/11/05/managing-sub-modules-with-git-subtree/"/>
    <updated>2012-11-05T23:30:00+00:00</updated>
    <id>http://www.gerardcondon.com/blog/2012/11/05/managing-sub-modules-with-git-subtree</id>
    <content type="html"><![CDATA[<p>I&#8217;ve been using Git for a while now, both at work and also for my iOS projects. I&#8217;m really liking it and have nearly sorted out my workflow with it. One problem that remains for me though is how to manage external dependencies. If I need to include a library from Github for example, how do I integrate it with my source.</p>

<p>The main issues that I want to solve are</p>

<ul>
<li><p>What happens if the external library disappears? This is especially relevant for online sources like Github. Given the brittle nature of the web, I think we can take it as a given that a lot of these Github repositories will be deleted over the coming years. In this scenario I need to have a local copy of the code as a backup.</p></li>
<li><p>I should be able to update the local code with the latest or a specific tag from the external repository.</p></li>
<li><p>I want to be able to create common libraries for my own code which I can share between applications.</p></li>
<li><p>It may be that I will need to modify the code, so how do I maintain those changes. Perhaps I will need to push those changes to the external repository. This seems likely for my own common libraries.</p></li>
<li><p>I want to be able to check out all the code needed to build an application from the source control using a single checkout/clone command. This means that each application will have a full copy of all the code that is needed to build it.</p></li>
</ul>


<p>One solution that I&#8217;ve seen used in other projects is to use git submodule links. A git submodule points to a version of an external repository. The ones I&#8217;ve seen for iOS libraries will usually point to Github. When you run the <code>git submodule init</code> command, git will follow these links and download the source into your project.</p>

<p>However in researching this, other people have reported problems using git submodules. They don&#8217;t seem as simple and as usable as I would need. I&#8217;m seeing issues on <a href="http://codingkilledthecat.wordpress.com/2012/04/28/why-your-company-shouldnt-use-git-submodules/">sites</a> regarding detached heads, branching, different versions etc. I just know that I will hit all these issues and probably a few more besides!</p>

<p>In looking for an alternative I came across git subtrees on Wolf Rentzsch&#8217;s <a href="http://rentzsch.tumblr.com/post/22061209807/apps-i-love-git-subtree">site</a>. This seems to fit all my needs and appears less error prone than git submodules. The code can be downloaded <a href="https://github.com/rentzsch/git-subtree">here</a> and here&#8217;s a good <a href="http://psionides.eu/2010/02/04/sharing-code-between-projects-with-git-subtree/">tutorial</a> on using subtrees.</p>

<p>My basic usage of it, i.e. to integrate a library from Github would be something like
<code>git subtree add --prefix=GCUtils/External/CocoaLumberjack --squash https://github.com/robbiehanson/CocoaLumberjack.git master</code>
I use the squash option to compress all the commit history of the library to just one commit message in my repository.</p>

<p>One issue I ran into was adding a project which itself contained submodules. In this situation I search and find all the .gitmodules files and add those manually as subtrees in my repository.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting up Calabash on iOS]]></title>
    <link href="http://www.gerardcondon.com/blog/2012/10/22/setting-up-calabash-on-ios/"/>
    <updated>2012-10-22T23:38:00+01:00</updated>
    <id>http://www.gerardcondon.com/blog/2012/10/22/setting-up-calabash-on-ios</id>
    <content type="html"><![CDATA[<p>I&#8217;ve been implementing some new features in iOS and in the process refactoring some existing code. As I&#8217;ve been making these changes, I began to feel that the code was reaching a tipping point where I was as likely to break existing features as successfully add the new functionality.
In particular I was experimenting with table view controllers and there are a lot of functions to override depending on what behaviour you want. I was finding that changes for one type of behaviour were impacting functionality that I thought I had solved previously. I hadn&#8217;t been doing much automated testing up to now apart from some unit testing, so I was worried about adding regression bugs.</p>

<p>I decided to take a break from coding in order to implement some proper tests and specifically I wanted to do some UI testing. For this I chose the Calabash framework. This is developed by the people at <a href="http://lesspainful.com">Less Painful</a>. One of them, Karl Krukow, has a detailed <a href="http://blog.lesspainful.com/2012/03/07/Calabash-iOS/">post</a> comparing Calabash to the other automated frameworks out there.</p>

<h1>Cucumber</h1>

<p>Calabash is based on a Ruby test framework called <a href="http://cukes.info">Cucumber</a>. Cucumber allows for tests to be written in high level language called Gherkin. Gherkin is written in natural language and so can be understood by anyone - not just developers. It acts as documentation as well as a test framework. I could see this as being very useful when writing an application for a client. By giving them the Cucumber tests, they can see in plain English what is being implemented and should be able to give constructive feedback. Also the tests are automated and are run from the command line.</p>

<p>While learning Cucumber the two main resources I used were</p>

<ul>
<li>The <a href="http://cukes.info">Cucumber</a> website which has a number of tutorials and a great wiki.</li>
<li>The Pragmatic Programmers&#8217; Cucumber <a href="http://pragprog.com/book/hwcuc/the-cucumber-book">book</a>. This is an excellent book. I highly recommend reading this before implementing any tests.</li>
</ul>


<h1>Installation</h1>

<p>Cucumber requires Ruby to be installed on your system (I had previously installed it while setting up Octopress). The Calabash install process is documented on their Github <a href="https://github.com/calabash/calabash-ios">page</a>. I used the Fast Track installer using these steps.</p>

<ul>
<li><code>gem install calabash-cucumber</code></li>
<li><code>calabash-ios setup</code></li>
<li><code>calabash-ios sim acc</code></li>
<li><code>calabash-ios gen</code></li>
</ul>


<p>This created initial test files which you can run from the command line using <code>cucumber</code>.</p>

<p>One thing that worries me about the install process is that it creates a new scheme specifically for Calabash use. I don&#8217;t really like this solution as it breaks DRY and requires keeping the original scheme and the new Calabash scheme in sync. From my experience in programming, anything that is required to be kept manually in sync, won&#8217;t be. I would have preferred for the Calabash libraries to only be included in the Debug target of the main scheme or for a new target to be created on that scheme. <strong>Update:</strong> Since I wrote this post Trevor Harmon has been in touch with an alternative approach to just link in the libraries for the Debug build - more info <a href="https://groups.google.com/forum/#!topic/calabash-ios/gfDLRvYqIyo/discussion">here</a>.</p>

<p>A good blog on the Calabash install and initial test setup is <a href="http://www.moncefbelyamani.com/ios-automated-testing-with-calabash-cucumber-ruby/">here</a>.</p>

<h1>First Steps with Calabash</h1>

<ul>
<li><p>I think the Calabash <a href="https://github.com/calabash/calabash-ios/wiki/01-Getting-started-guide">wiki</a> is the best starting point for Calabash.</p></li>
<li><p>The first thing I tried was the console using <code>calabash-ios console</code>. I recommend this to play around and see what objects are visible to Calabash.</p></li>
<li><p>The command <code>query("view")</code> shows everything on screen. We can isolate specific views by filtering on the accessibility label. In some cases this wasn&#8217;t useful for me. For example, I have a table where each cell has a text field. Each of these has the same accessibility label so instead I filtered using the :text property.</p></li>
<li><p>We can find out what accessibility labels are visible using <code>label "view"</code>. Once we have a label we can do things like touching or swiping on the view or checking that the view exists using <code>view_with_mark_exists()</code>.</p></li>
<li><p>The accessibility inspector can be used to identify the classes of UI elements and the on-screen hierarchy. Launch this from XCode under the menu item XCode->Open Developer Tool->Accessibility Inspector.</p></li>
<li><p>I found that the built-in Calabash <a href="https://github.com/calabash/calabash-ios/blob/master/calabash-cucumber/features/step_definitions/calabash_steps.rb">steps</a> were very useful to base mine on.</p></li>
<li><p>A problem I had was querying for the currently active textfield from a table of textfields. The issue was that all those textfields had the same placeholder text. To get the correct one I filtered by <code>isUserInteractionEnabled</code>.</p></li>
<li><p>Errors in the name of the selector passed to the <code>backdoor</code> command show up as connection errors.</p></li>
<li><p>Initially I struggled with writing the tests at the correct level. The temptation is to be really specific in terms of UI elements e.g. When I touch X button and swipe on Y label. However you really need to describe them at a higher level e.g. when I add a new contact, when I delete an appointment etc.</p></li>
<li><p>Initially I was unable to run a backdoor command in the before hook, which runs before each test. I had wanted to reset my Core Data database &amp; UI at this time. The reason here is that the Calabash framework itself uses before hooks to connect to the app and I think my hook was being called before theirs. To solve this Calabash added support for defining an <code>on_launch</code> function which is called after the simulator has started. To implement use the following template in the <code>hooks.rb</code> file.</p>

<pre><code>  class CallbackWorld
   include Calabash::Cucumber::Operations
   def on_launch
     # here I can call backdoor and reset the app state
   end
  end

  World do
   CallbackWorld.new
  end
</code></pre></li>
<li><p>My typical test layout is to use</p>

<ul>
<li><strong>Given</strong> to put the system in a specific state - this is where I use the backdoor function to set up the app model. I do things like erase all the Core Data objects here (from <a href="http://stackoverflow.com/questions/1077810/delete-reset-all-entries-in-core-data">Stack Overflow</a>) to ensure that each test starts with a clean slate.</li>
<li><strong>When</strong> to perform an action. These are driven through the app UI.</li>
<li><strong>Then</strong> to check the results of the actions. I&#8217;ve typically done these using the app UI e.g. checking for the existence of views, the state of the UI etc. As an alternative I could also use the backdoor function to check the model here.</li>
</ul>
</li>
</ul>


<h1>Issues with Calabash.</h1>

<p>It wasn&#8217;t all smooth sailing as I did run into a few issues along the way.</p>

<ul>
<li><p>I wasn&#8217;t able to get it to integrate with my installation of Jenkins, which is unfortunate as Cucumber can output in JUnit format so it&#8217;s a perfect fit for Jenkins. The problem here is on my side as lots of users on the Calabash Google Group are running Calabash from their CI system. I think it due to the jenkins user not being able to launch the iOS simulator. I need to investigate further on this.</p>

<p>  <strong>Update:</strong> Ru Cindrea emailed me to suggest another way of running Jenkins which may fix this problem.</p>

<blockquote><p>I used to launch Jenkins like this: &#8220;sudo launchctl load /Library/LaunchDaemons/org.jenkins-ci.plist&#8221; - which seems to be the recommended way on a lot of sites I have found.</p>

<p>However, I now launch it under my own user, using &#8220;nohup java -jar /Applications/Jenkins/jenkins.war &#8211;httpPort=8080&#8221; - and everything works perfectly! I can simply use &#8220;cucumber -f junit -o results -f pretty&#8221; to start the simulator, run the tests and get my JUnit report.</p></blockquote></li>
<li><p>I had found that Calabash would frequently drop the connection to the app and fail the tests as a result. Once a test run started seeing these errors for a test (<code>Unable to make connection to Calabash Server at http://localhost:37265/</code>) then each following test in the run would show the same error. Rerunning the tests would normally sort it out in the next run or two. Both the app and Calabash would be running fine but just couldn&#8217;t seem to connect to each other. This unreliability was the most disappointing part of the tests for me.</p>

<p>  <strong>Update:</strong> Karl pointed me to the Google Group and I saw some <a href="https://groups.google.com/forum/?fromgroups=#!topic/calabash-ios/NdExaULsHz4">updates</a> that were needed to work with the new iOS 6 Simulator. I had seen that black screen issue as part of trying to get it working with Jenkins. So I&#8217;ve updated to the latest version of Calabash and on the first test run, everything worked fine. Hopefully this will resolve the issue in future.</p></li>
</ul>


<h1>Initial Impressions &amp; Next Steps</h1>

<p>I have to say that I&#8217;m very impressed with Calabash and indeed Cucumber in general. I think that writing these type of tests beforehand would be helpful for requirements gathering and feature design. The tests themselves are not only useful as tests but also as documentation. Unlike Word docs, we can be guaranteed that these accurately describe the current state of the system, given that they are actually run against it.</p>

<p>My plans for the future</p>

<ul>
<li>I need to add more tests. I initially tested this with just a single feature and that&#8217;s worked out so well that I&#8217;ll add this to the other features.</li>
<li>From now on, I also plan to write these type of tests for a feature before implementing it. I think that the Cucumber tests especially with the language they are written in are very effective when thinking through the behaviour of the app. They force you to describe it in high level terms rather than just diving into coding.</li>
<li>My tests currently have a lot of duplication. Once I have written a lot more of them and I gain more Ruby experience, I will look to refactor them.</li>
</ul>


<p><strong>Update:</strong> After my initial post Karl Krukow emailed me with some updates on the issues I was having and I&#8217;ve integrated those into the blog post. He pointed out that there is a <a href="https://groups.google.com/forum/?fromgroups#!forum/calabash-ios">Google Group</a> for Calabash on iOS where you can ask questions and share information.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Further Jenkins Setup for iOS]]></title>
    <link href="http://www.gerardcondon.com/blog/2012/09/20/further-jenkins-setup-code-signing/"/>
    <updated>2012-09-20T01:15:00+01:00</updated>
    <id>http://www.gerardcondon.com/blog/2012/09/20/further-jenkins-setup-code-signing</id>
    <content type="html"><![CDATA[<p>Last <a href="http://www.gerardcondon.com/blog/2012/09/16/setting-up-jenkins-on-os-x/">time</a> I went through how I set up jenkins on iOS and built a simple static library. All in all, that process went ok. The next step was to build an actual app. Unfortunately I encountered a lot more issues with this.</p>

<p>The first error I got was</p>

<pre><code>Code Sign error: The identity 'iPhone Developer' doesn't match any valid certificate/private key pair in the default keychain` 
</code></pre>

<p>This <a href="http://stackoverflow.com/questions/9245149/jenkins-on-os-x-xcodebuild-gives-code-sign-error/9246321#9246321">post</a> on Stack Overflow has a really detailed set of instructions on how best to fix this. Unfortunately as my iPhone developer account is not a business one, I can&#8217;t add a jenkins user to it. So to solve my problem I added my certificate to the system keychain so that now my local jenkins user can access it.</p>

<p>Once that was out of the way, the next issue to rear its head was a provisioning profile error.</p>

<pre><code>Code Sign error: A valid provisioning profile matching the application's Identifier '...' could not be found
</code></pre>

<p>I found the solution to this again on <a href="http://stackoverflow.com/questions/10454628/xcodebuild-code-sign-error-provisioning-profile-x-cant-be-found">Stack Overflow</a>.
I needed to copy my provisioning profile from <code>~/Library/MobileDevice/Provisioning</code> to the jenkins user&#8217;s folder at <code>/Users/Shared/Jenkins/Home/Library/MobileDevice/Provisioning Profiles</code>.</p>

<p>The next reason for the build failing was that I was invoking xcodebuild using a target instead of a scheme. The target worked fine for the static library but was failing for the app as it was unable to find all the include files. Once I switched to building a scheme, the build worked fine. Building via a scheme or target is easy to configure using the Jenkins XCode plugin. You set the XCode Schema File entry to the name of the XCode build scheme.</p>

<p>Nearly there! Now that the build was working I turned my attention to getting the unit tests running. The <code>TEST_AFTER_BUILD</code> flag that had worked before wasn&#8217;t working this time. Fortunately I found the solution on Peter Jihoon Kim&#8217;s <a href="http://www.raingrove.com/2012/03/28/running-ocunit-and-specta-tests-from-command-line.html">blog</a>. I needed to create a new scheme to run my tests. Once that was done I got this error</p>

<pre><code>/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Tools/Tools/RunPlatformUnitTests:95: warning: Skipping tests; the iPhoneSimulator platform does not currently support application-hosted tests (TEST_HOST set).
</code></pre>

<p>Peter&#8217;s blog describes the fix for this. You need to patch the <code>RunPlatformUnitTests</code> file in order to remove the warning printout and invoke the tests.</p>

<p>The last error I had to deal with was with the code coverage. I started seeing errors with <code>fopen$UNIX2003</code> and <code>fwrite$UNIX2003</code>. I had seen this issue on other blogs before but hadn&#8217;t encountered it myself until I tried building an app using the command line. The solution as described <a href="http://stackoverflow.com/questions/8732393/code-coverage-with-xcode-4-2-missing-files">here</a> is to add implementations of these into your application which simply call the standard C functions.</p>

<pre><code>#include &lt;stdio.h&gt;

FILE *fopen$UNIX2003( const char *filename, const char *mode )
{
    return fopen(filename, mode);
}

size_t fwrite$UNIX2003( const void *a, size_t b, size_t c, FILE *d )
{
    return fwrite(a, b, c, d);
}
</code></pre>

<p>One unresolved issue was that I couldn&#8217;t get clang scan plugin working for this setup. I think the issue here is that it was using targets instead of schemes. I left this one go as I didn&#8217;t feel it important enough to get working. XCode runs this while I&#8217;m developing anyway. I may come back to it in future once everything else is stable.</p>

<h3>XCode 4.5 Updates</h3>

<p>So, just when I got everything working for XCode 4.4, along comes XCode 4.5. Ever since the 4.2 to 4.3 transition broke code coverage for me, I&#8217;ve been a bit wary of XCode updates. Sure enough after installing 4.5 and trying to build my app, I got an error message saying that the calabash framework was missing a armv7s slice</p>

<pre><code>ld: file is universal (2 slices) but does not contain a(n) armv7s slice: 
...calabash.framework/calabash for architecture armv7s
</code></pre>

<p><a href="http://calaba.sh">Calabash</a> is part of an iOS testing framework based on <a href="http://cukes.info">Cucumber</a>. I&#8217;ve just started to implement this form of testing and it looks really nice. Getting back to the build issue, Ash Furrow has a detailed <a href="http://ashfurrow.com/fix-ios-6-sdk-linker-error">post</a> on this issue. We need to remove armv7s (which refers to the new A6 chip in the iPhone 5) from our valid architectures. Once Calabash gets updated to support this architecture, I can reenable it.</p>

<p>Once everything built in XCode, it was time to try the jenkins build. Naturally this broke also. The problem was that the XCode plugin couldn&#8217;t find the 5.1 simulator.</p>

<pre><code>xcodebuild: error: SDK "/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator5.1.sdk" cannot be located.
</code></pre>

<p>XCode 4.5 had wiped out the simulators for 5.1 so I needed to redownload them. I was able to download these from Preferences->Downloads->Components. XCode also prompted me to download the 6.0 simulator so I got that out of the way while installing 5.1.</p>

<p>Once the simulators were installed I started hitting the same <code>RunPlatformUnitTests</code> error as above. When I opened the script file to reinsert Peter&#8217;s edits I saw that it had changed slightly. Now the error printout was happening in a function on line 80 which overrode <code>RunTestsForApplication()</code>. I deleted that function and I added back in the original patch at line 118 so that now it looks like</p>

<pre><code>if [ "${TEST_HOST}" != "" ]; then
    # All applications are tested the same way, by injecting a bundle.
    # The bundle needs to configure and run the tests itself somehow.
    export CFFIXED_USER_HOME="${BUILT_PRODUCTS_DIR}/UserHome/"
    mkdir -p "${CFFIXED_USER_HOME}"
    mkdir -p "${CFFIXED_USER_HOME}/Library/Caches"
    mkdir "${CFFIXED_USER_HOME}/Library/Preferences"
    mkdir "${CFFIXED_USER_HOME}/Documents"
    export OTHER_TEST_FLAGS="${OTHER_TEST_FLAGS} -RegisterForSystemEvents"

    RunTestsForApplication "${TEST_HOST}" "${TEST_BUNDLE_PATH}"
else
    # If no TEST_HOST is specified, assume we're running the test bundle.

    RunTestsForBundle "${TEST_BUNDLE_PATH}"
fi
</code></pre>

<p>These changes fixed the 4.5 build issues and now I have a working build and test setup again. Finally!!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting up Jenkins on OS X]]></title>
    <link href="http://www.gerardcondon.com/blog/2012/09/16/setting-up-jenkins-on-os-x/"/>
    <updated>2012-09-16T13:24:00+01:00</updated>
    <id>http://www.gerardcondon.com/blog/2012/09/16/setting-up-jenkins-on-os-x</id>
    <content type="html"><![CDATA[<p>First post in a long time. I didn&#8217;t really do much iOS development over the summer and am only starting to get back into it in the past few weeks. I have some draft posts on my dealings with both Core Data and UITableViews and once those features are complete I&#8217;ll post them.</p>

<p>Along with coding, I&#8217;ve been looking at adding some build infrastructure for my projects. Having seen <a href="http://jenkins-ci.org/">Jenkins</a> used at work, I wanted to get a CI system set up for my builds here at home. I want to use it to kick off a build, run the tests and package up the iPhone app. By using something like Jenkins I can automate my build and testing process and also have a record of previous builds.</p>

<h2>Jenkins Install</h2>

<p>The first step was to install Jenkins. They provide a Mac installer - the only annoyance is that it triggers the new OS X Gatekeeper dialog blocking unsigned apps from installing. Then I loaded locahost:8080 in my browser to find that Jenkins wasn&#8217;t loading and there was no error message telling me what went wrong. D&#8217;oh. The issue is that Jenkins requires Java to run but it isn&#8217;t installed by default on OS X. To install simply type <code>java</code> into a terminal and a message box will appear prompting you to install Java.</p>

<p>Then I followed the user setup from Moritz Haarmann&#8217;s <a href="http://momo.brauchtman.net/2011/11/12/howto-install-jenkins-on-os-x-and-make-it-build-mac-stuff/">blog</a>. I&#8217;m not sure if the jenkins account part is still necessary, as when I got to the stage about changing the user name in the plist file, it had already been set to Jenkins. The changing permissions on the Jenkins home folder was needed though. After that I was able to run ssh-keygen and generate some keys.</p>

<h2>Updating Git Workflow</h2>

<p>I installed the Git and XCode plugins from the Manage Jenkins screen with no issues. I then created a simple project to test it out. I just added a git clone step. This failed for me with the following errors</p>

<pre><code>Failed to connect to repository : Command "git ls-remote -h ..../MyApp.git HEAD" returned status code 128:
stdout: 
stderr: fatal: '..../MyApp.git' does not appear to be a git repository
fatal: The remote end hung up unexpectedly
</code></pre>

<p>The problem here is that the repository is on my Dropbox account (as described <a href="http://www.gerardcondon.com/blog/2012/01/26/version-control-in-xcode-using-git-and-dropbox/">here</a>). This folder is not visible to the jenkins user. I didn&#8217;t want to mess around with changing permissions on the Dropbox folder so I looked for an alternative solution. A colleague at work told me about <a href="https://bitbucket.org/">Bitbucket</a> from Atlassian. This is similar to <a href="http://www.github.com">Github</a> but allows for private repositories. As luck would have it, I had already been using another Atlassian product <a href="http://www.sourcetreeapp.com/">SourceTree</a> to manage my git repositories. This tool works seamlessly with Bitbucket. Once I uploaded my ssh key to Bitbucket I could simply add another remote repository to my local repository and push to it, all from within SourceTree.</p>

<p>Now that I had a repository on Bitbucket, it was time to integrate that with Jenkins. This turned out to be fairly easy. I uploaded the ssh key for the jenkins account to Bitbucket. The admin page for the repository showed its ssh address so I added a Git build step to the project using that ssh address. When the project is built now, Jenkins will download the latest code from the repository first and then continue on.</p>

<h2>Jenkins Issues</h2>

<p>While Jenkins is mostly working fine now, there were a few issues I&#8217;ve run into. The git checkout isn&#8217;t working at all using the Git Plugin. Originally it did but then I started getting the following errors</p>

<pre><code>FATAL: Could not checkout null with start point 02dbc3e456d6aa6079543eeaa8361bdebe8fac9d
hudson.plugins.git.GitException: Could not checkout null with start point 02dbc3e456d6aa6079543eeaa8361bdebe8fac9d
    at hudson.plugins.git.GitAPI.checkoutBranch(GitAPI.java:956)
    ...

Caused by: hudson.plugins.git.GitException: Command "git checkout -f 02dbc3e456d6aa6079543eeaa8361bdebe8fac9d" returned status code 128:
stdout: 
stderr: fatal: reference is not a tree: 02dbc3e456d6aa6079543eeaa8361bdebe8fac9d
</code></pre>

<p>I wasn&#8217;t able to find a solution to this so I had to stop using the Git plugin and just add an <code>execute shell</code> build step to clone the Bitbucket git repository. As I add more projects to Jenkins, I&#8217;ll check if I get the same issues there also.</p>

<h2>Build XCode Project</h2>

<p>The <a href="http://www.XXX.com">XCode plugin</a> for Jenkins made it really easy to build once setup. You add an XCode build step and configure it as necessary. I chose to do a clean build each time. The project I tested this on was a static library so I didn&#8217;t need an IPA built or any of the version number updates but they should be useful when building a proper app.</p>

<p>When I first tried to build I got an error saying <code>You have not agreed to the Xcode license agreements</code>. I needed to run <code>sudo xcodebuild -license</code> in the terminal to fix this.</p>

<p>In order to run the unit tests, the XCode plugin recommends using two build steps, one to build the app and the other to execute the tests. The reason for this is that the test step requires extra parameters i.e. path to the simulator SDK. If you&#8217;re using the OCTest framework which comes with XCode then the plugin will listen to the test output and generate JUnit compatible xml files. Jenkins can read these and add the to the build results page.</p>

<h2>Set up Coverage</h2>

<p>Setting up code coverage for iOS projects is not an easy task. My gcov setup for XCode 4.3 still worked for me but the problem was to integrate this with Jenkins. Coverstory would not be of use here but I found this <a href="https://software.sandia.gov/trac/fast/wiki/gcovr">gcovr</a> script from the <a href="http://blog.octo.com/en/jenkins-quality-dashboard-ios-development/">Octo Talks</a> blog. Gcovr will convert the gcov output into a <a href="http://cobertura.sourceforge.net/">cobertura</a> xml file which can be read by Jenkins.</p>

<p>One problem I had was that for some reason, gcov wouldn&#8217;t work on the files in the Jenkins workspace. I was getting <code>gcno:cannot open graph file</code>errors. Coverstory also didn&#8217;t work on the files in this location. What worked for me was to copy the gcda and gcno files out to a temp folder under /Users/Shared/Jenkins/Home. Passing the original build location as the root parameter to gcovr allowed the cobertura plugin to find the source code in the html report, while also removing system headers from the coverage report. Here is the script.</p>

<pre><code>cp -r ${WORKSPACE}/build/${JOB_NAME}.build/Coverage-iphonesimulator/${JOB_NAME}.build/Objects-normal/i386/*.gc* /Users/shared/Jenkins/tmp/${JOB_NAME}
cd /Users/shared/Jenkins/tmp/${JOB_NAME}
gcovr -r $WORKSPACE/$JOB_NAME -x &gt; ${WORKSPACE}/coverage.xml
</code></pre>

<p>The <a href="http://blog.octo.com/en/jenkins-quality-dashboard-ios-development/">Octo Talks</a> blog also suggested a number of other metrics which could be captured in Jenkins. I added the SLOC Count and the Clang Build Scan. Both of these required installing tools and then Jenkins plugins which used those tools. This instructions on the blog covered this. Ones that I&#8217;ve put on the someday/maybe list are the PMD plugin and OCLint.</p>

<p>At the end of all this, Jenkins is working quite well for my simple test project. Next step is to try it out on my app.</p>
]]></content>
  </entry>
  
</feed>
